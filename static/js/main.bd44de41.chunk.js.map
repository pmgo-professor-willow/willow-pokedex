{"version":3,"sources":["components/pokemon/Move.tsx","components/pokemon/Image.tsx","components/pokemon/AddressedImage.tsx","components/pokemon/TypeIcon.tsx","components/pokemon/Types.tsx","components/pokemon/Stats.tsx","components/pokemon/About.tsx","components/pokemon/EvolutionTree.tsx","components/pokemon/MoveTable.tsx","components/pokemon/MoveHeader.tsx","components/pokemon/CombatRanking.tsx","components/pokemon/CombatPower.tsx","contexts/pokemon.tsx","utils/translate-form.ts","utils/generate-evolution-tree.ts","screens/PokemonProfileScreen.tsx","screens/SearchScreen.tsx","hoc/ga.tsx","configs/index.ts","icons/loading.svg","components/misc/FullLoading.tsx","App.tsx","hooks/PokemonData.tsx","reportWebVitals.ts","index.tsx"],"names":["PokemonTypeColorEnum","imageTextTable","unknownImageUrl","PokemonImage","props","className","pokemonNo","pokemonForm","shiny","size","useState","imageUrl","setImageUrl","useEffect","url","urlBase","no","String","padStart","defaultImageText","imageText","getImageUrl","preview","width","height","src","onError","styledPokemonAddressedImage","styled","collection","secondGender","addressable","setAddressable","filter","Boolean","join","PokemonTypeIcon","pokemonType","typeText","replace","styledPokemonTypes","pokemon","id","justify","align","types","map","type","i","span","PokemonStat","value","percent","displayText","strokeColor","style","textAlign","Text","status","showInfo","strokeWidth","styledPokemonStats","allPokemons","stats","maximum","setMaximum","baseStamina","maxBy","baseAttack","baseDefense","plain","orientation","Title","level","styledPokemonAbout","flex","category","Paragraph","description","getDistinctId","form","StyledCostBadge","cost","undefined","count","overflowCount","StyledPokemonEvolutionCell","evolutionNode","previousNode","scrollToTop","useCallback","window","scrollTo","top","behavior","requirement","hasBranches","branches","length","costBadge","candyCost","lineColor","energyCost","gender","onClick","to","toLowerCase","hoverable","cover","Meta","title","name","en","start","end","label","animateDrawing","color","dashness","strokeLen","nonStrokeLen","animation","headSize","styledPokemonEvolutionTree","evolutionTree","useVisible","visible","targetRef","ref","styledPokemonMoveTable","mode","leagueRanking","detailed","setDetailed","toggleDetailMode","e","target","checked","onChange","quickMoves","move","bestCombatMoveIds","quickMoveIds","uniqueId","eliteQuickMoves","legacy","cinematicMoves","cinematicMoveIds","eliteCinematicMoves","gutter","find","m","isCommunityMove","styledPokemonMoveHeader","wrap","PokemonMoveEnergyBar","energyDelta","Math","floor","abs","times","PokemonCombatMoveBuffs","buffs","buffColumn","metric","icon","targetText","metricText","levelText","CaretUpOutlined","CaretDownOutlined","ForwardOutlined","rotate","BackwardOutlined","LineChartOutlined","buffActivationChance","attackerAttackStatStageChange","attackerDefenseStatStageChange","targetAttackStatStageChange","targetDefenseStatStageChange","styledPokemonMove","pvp","combat","base","power","durationMs","special","includes","best","TypeIcon","LikeTwoTone","twoToneColor","strong","round","RankingButton","ranking","imageSrc","league","setLeague","active","styledPokemonCombatRanking","greatLeague","ultraLeague","masterLeague","styledPokemonCombatPower","cpTable","data","cp","dataSource","pagination","showHeader","Column","dataIndex","render","PokemonContext","React","createContext","formTable","translateForm","translatedForm","getRootPokemon","familyPokemons","previousPokemon","p","evolutions","getEvolutionNode","nextPokemons","nextPokemon","evo","getNextPokemon","nextRequirement","omit","genEvolutionTree","familyId","ProfileTabs","Tabs","styledPokemonProfileScreen","pokemons","useContext","useParams","redirect","setRedirect","isomorphicPokemons","setIsomorphicPokemons","displayPokemon","setDisplayPokemon","setEvolutionTree","setShiny","newIsomorphicPokemons","parseInt","newDisplayPokemon","newEvolutionTree","subTitle","onBack","extra","Option","shape","centered","TabPane","tab","styledSearchScreen","hasMore","setHasMore","generations","setGenerations","displayGenerations","setDisplayGenerations","onSearch","slice","generation","toUpperCase","fetchMoreData","startIdx","endIdx","nextGeneration","concat","generationNo","displayGeneration","noRange","extraForms","Infinity","generationRule","displayName","chain","noInRange","sameForm","groupBy","direction","Search","placeholder","dataLength","next","loader","scrollThreshold","offset","toString","ReactGA","initialize","withTracker","WrappedComponent","options","trackPage","page","set","pageview","location","pathname","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","SvgLoading","_ref","svgRef","titleId","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","d","opacity","ForwardRef","styledFullLoading","indicator","Icon","spin","component","LoadingSvg","App","loading","setLoading","setPokemons","a","Promise","all","fetch","resolve","setTimeout","res","json","fetchData","usePokemonData","Provider","path","Screen","position","bottom","zIndex","href","block","SendOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd44de41.chunk.js","sourcesContent":["// Node modules.\r\nimport { times } from 'lodash';\r\nimport React from 'react';\r\nimport { Row, Col, Tag, Typography, Progress } from 'antd';\r\nimport styled from 'styled-components';\r\nimport {\r\n    LikeTwoTone,\r\n    CaretUpOutlined,\r\n    CaretDownOutlined,\r\n    ForwardOutlined,\r\n    BackwardOutlined,\r\n    LineChartOutlined,\r\n} from '@ant-design/icons';\r\n// Local modules.\r\nimport { IMove } from '../../models/pokemon';\r\nimport { TypeIcon } from './index';\r\n\r\nenum PokemonTypeColorEnum {\r\n    POKEMON_TYPE_BUG = '#9DC130',\r\n    POKEMON_TYPE_DARK = '#5F606D',\r\n    POKEMON_TYPE_DRAGON = '#0773C7',\r\n    POKEMON_TYPE_ELECTRIC = '#EDD53F',\r\n    POKEMON_TYPE_FAIRY = '#EF97E6',\r\n    POKEMON_TYPE_FIGHTING = '#D94256',\r\n    POKEMON_TYPE_FIRE = '#F8A54F',\r\n    POKEMON_TYPE_FLYING = '#9BB4E8',\r\n    POKEMON_TYPE_GHOST = '#6970C5',\r\n    POKEMON_TYPE_GRASS = '#5DBE62',\r\n    POKEMON_TYPE_GROUND = '#D78555',\r\n    POKEMON_TYPE_ICE = '#7ED4C9',\r\n    POKEMON_TYPE_NORMAL = '#9A9DA1',\r\n    POKEMON_TYPE_POISON = '#B563CE',\r\n    POKEMON_TYPE_PSYCHIC = '#F87C7A',\r\n    POKEMON_TYPE_ROCK = '#CEC18C',\r\n    POKEMON_TYPE_STEEL = '#5596A4',\r\n    POKEMON_TYPE_WATER = '#559EDF',\r\n}\r\n\r\ninterface PokemonMoveEnergyBarProps {\r\n    energyDelta: number;\r\n    type: IMove['type'];\r\n}\r\n\r\nconst PokemonMoveEnergyBar: React.FC<PokemonMoveEnergyBarProps> = (props) => {\r\n    const { energyDelta, type } = props;\r\n    const count = Math.floor(100 / Math.abs(energyDelta));\r\n\r\n    return (\r\n        <Row gutter={3} justify={'center'} align={'middle'}>\r\n            {times(count, (i) => (\r\n                <Col key={i} flex={1}>\r\n                    <Progress showInfo={false}\r\n                        strokeWidth={10}\r\n                        percent={100}\r\n                        strokeColor={PokemonTypeColorEnum[type]}\r\n                    />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n};\r\n\r\ninterface PokemonCombatMoveBuffsProps {\r\n    buffs: IMove['combat']['buffs'];\r\n}\r\n\r\nconst PokemonCombatMoveBuffs: React.FC<PokemonCombatMoveBuffsProps> = (props) => {\r\n    const { buffs } = props;\r\n\r\n    if (!buffs) {\r\n        return null;\r\n    }\r\n\r\n    const buffColumn = (target: 'self' | 'enemy', metric: 'atk' | 'def', count: number): JSX.Element => {\r\n        const targetText = target === 'self' ? '自身' : '敵方';\r\n        const metricText = metric === 'atk' ? '攻擊' : '防禦';\r\n        const levelText = count > 0\r\n            ? `上升 ${count} 層`\r\n            : `下降 ${Math.abs(count)} 層`;\r\n\r\n        let icon;\r\n        if (count === 1) {\r\n            icon = <CaretUpOutlined className='green icon' />;\r\n        } else if (count === -1) {\r\n            icon = <CaretDownOutlined className='red icon' />;\r\n        } else if (count >= 2) {\r\n            icon = <ForwardOutlined className='green icon' rotate={-90} />;\r\n        } else if (count <= -2) {\r\n            icon = <BackwardOutlined className='red icon' rotate={-90} />;\r\n        }\r\n\r\n        return (\r\n            <Row className='pokemon-move-sub' wrap={false} gutter={1} align='middle'>\r\n                <Col flex={1}>\r\n                    <Typography.Text className='content'>\r\n                        {icon}\r\n                        {` ${targetText}${metricText}${levelText}`}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className='pokemon-move-sub' wrap={false} gutter={1} align='middle'>\r\n                <Col flex={1}>\r\n                    <Typography.Text className='content'>\r\n                        <LineChartOutlined className='icon' />\r\n                        {` 觸發機率: ${buffs.buffActivationChance * 100}%`}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n\r\n            {buffs.attackerAttackStatStageChange && (\r\n                buffColumn('self', 'atk', buffs.attackerAttackStatStageChange)\r\n            )}\r\n\r\n            {buffs.attackerDefenseStatStageChange && (\r\n                buffColumn('self', 'def', buffs.attackerDefenseStatStageChange)\r\n            )}\r\n\r\n            {buffs.targetAttackStatStageChange && (\r\n                buffColumn('enemy', 'atk', buffs.targetAttackStatStageChange)\r\n            )}\r\n\r\n            {buffs.targetDefenseStatStageChange && (\r\n                buffColumn('enemy', 'def', buffs.targetDefenseStatStageChange)\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\ninterface PokemonMoveProps {\r\n    className?: string;\r\n    move: IMove;\r\n    mode: 'pve' | 'pvp';\r\n    legacy?: boolean;\r\n    detailed?: boolean;\r\n    bestCombatMoveIds?: string[];\r\n}\r\n\r\nconst PokemonMove: React.FC<PokemonMoveProps> = (props) => {\r\n    const { className } = props;\r\n    const { move, mode, legacy, detailed, bestCombatMoveIds } = props;\r\n\r\n    const pvp = mode === 'pvp';\r\n    const { power, energyDelta } = pvp ? move.combat : move.base;\r\n    const { durationMs } = move.base;\r\n\r\n    // Shadow or purified pokemons.\r\n    const special = ['RETURN', 'FRUSTRATION'].includes(move.uniqueId);\r\n\r\n    // This move is the best combat move or not.\r\n    const best = bestCombatMoveIds?.includes(move.uniqueId.replace(/_FAST$/, ''));\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Row className='pokemon-move-main' wrap={false} gutter={1} align='middle'>\r\n                <Col flex='auto'>\r\n                    <Row wrap={false} gutter={5} align='middle'>\r\n                        <Col className='pokemon-move-type' flex='none'>\r\n                            <TypeIcon pokemonType={move.type} size={20} />\r\n                        </Col>\r\n\r\n                        <Col flex='none'>\r\n                            <Row wrap={false} gutter={5}>\r\n                                {/* Best combat move */}\r\n                                {(pvp && best) &&\r\n                                    <Col flex='none'>\r\n                                        <LikeTwoTone twoToneColor='#52c41a' />\r\n                                    </Col>\r\n                                }\r\n\r\n                                {/* Move name */}\r\n                                <Col flex='none'>\r\n                                    <Typography.Text strong>\r\n                                        {move.name}\r\n                                    </Typography.Text>\r\n                                </Col>\r\n\r\n                                {/* Tags */}\r\n                                {(!detailed && (legacy || special)) &&\r\n                                    <Col flex='none'>\r\n                                        {legacy &&\r\n                                            <Tag color='red'>{'絕'}</Tag>\r\n                                        }\r\n                                        {move.uniqueId === 'RETURN' &&\r\n                                            <Tag color='cyan'>{'淨'}</Tag>\r\n                                        }\r\n                                        {move.uniqueId === 'FRUSTRATION' &&\r\n                                            <Tag color='purple'>{'暗'}</Tag>\r\n                                        }\r\n                                        {move.isCommunityMove &&\r\n                                            <Tag color='green'>{'社'}</Tag>\r\n                                        }\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n                {(!detailed && energyDelta < 0) &&\r\n                    <Col className='numberic' span={5}>\r\n                        <PokemonMoveEnergyBar\r\n                            energyDelta={energyDelta}\r\n                            type={move.type}\r\n                        />\r\n                    </Col>\r\n                }\r\n\r\n                <Col className='numberic' span={3}>\r\n                    <Typography.Text>\r\n                        {power}\r\n                    </Typography.Text>\r\n                </Col>\r\n\r\n                <Col className='numberic' span={3}>\r\n                    <Typography.Text>\r\n                        {energyDelta > 0 ? `+${energyDelta}` : energyDelta}\r\n                    </Typography.Text>\r\n                </Col>\r\n\r\n                {detailed &&\r\n                    <Col className='numberic' span={3}>\r\n                        <Typography.Text>\r\n                            {Math.round(power / durationMs * 1000 * 10) / 10}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                }\r\n\r\n                {detailed &&\r\n                    <Col className='numberic' span={3}>\r\n                        <Typography.Text>\r\n                            {Math.round(energyDelta / durationMs * 1000 * 10) / 10}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                }\r\n\r\n                {detailed &&\r\n                    <Col className='numberic' span={3}>\r\n                        <Typography.Text>\r\n                            {durationMs / 1000}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n\r\n            {pvp &&\r\n                <PokemonCombatMoveBuffs\r\n                    buffs={move.combat.buffs}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonMove = styled(PokemonMove)`\r\n& {\r\n    margin-bottom: 0.75em;\r\n\r\n    .pokemon-move-main {\r\n        line-height: 1.75em;\r\n\r\n        .pokemon-move-type {\r\n            display: flex;\r\n            align-content: center;\r\n        }\r\n\r\n        .numberic {\r\n            text-align: end;\r\n        }\r\n    }\r\n\r\n    .pokemon-move-sub {\r\n        padding-left: 2.5em;\r\n        margin: 0.25em 0;\r\n\r\n        .content {\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            .icon {\r\n                font-size: 1.5em;\r\n                margin-right: 0.25em;\r\n\r\n                &.green {\r\n                    color: #52c41a;\r\n                }\r\n\r\n                &.red {\r\n                    color: #f5222d;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledPokemonMove;\r\n","// Node modules.\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Image } from 'antd';\r\n\r\nconst imageTextTable: { [idx: string]: string } = {\r\n    // 形態變化 - 飄浮泡泡\r\n    '351_NORMAL': '351_11', // 飄浮泡泡的樣子\r\n    '351_SUNNY': '351_12', // 太陽的樣子\r\n    '351_RAINY': '351_13', // 雨水的樣子\r\n    '351_SNOWY': '351_14', // 雪雲的樣子\r\n\r\n    // 形態變化 - 代歐奇希斯\r\n    '386_NORMAL': '386_11', // 普通形態\r\n    '386_ATTACK': '386_12', // 攻擊形態\r\n    '386_DEFENSE': '386_13', // 防禦形態\r\n    '386_SPEED': '386_14', // 速度形態\r\n\r\n    // 形態變化 - 結草兒\r\n    '412_NORMAL': '412_11', // 草木蓑衣\r\n    '412_PLANT': '412_11', // 草木蓑衣\r\n    '412_SANDY': '412_12', // 砂土蓑衣\r\n    '412_TRASH': '412_13', // 垃圾蓑衣\r\n\r\n    // 形態變化 - 結草貴婦\r\n    '413_NORMAL': '413_11', // 草木蓑衣\r\n    '413_PLANT': '413_11', // 草木蓑衣\r\n    '413_SANDY': '413_12', // 砂土蓑衣\r\n    '413_TRASH': '413_13', // 垃圾蓑衣\r\n\r\n    // 形態變化 - 櫻花兒\r\n    '421_NORMAL': '421_11', // 陰天形態\r\n    '421_OVERCAST': '421_11', // 陰天形態\r\n    '421_SUNNY': '421_12', // 晴天形態\r\n\r\n    // 形態變化 - 無殼海兔\r\n    '422_NORMAL': '422_12', // 西海\r\n    '422_EAST_SEA': '422_11', // 東海\r\n    '422_WEST_SEA': '422_12', // 西海\r\n\r\n    // 形態變化 - 海兔獸\r\n    '423_NORMAL': '423_12', // 西海\r\n    '423_EAST_SEA': '423_11', // 東海\r\n    '423_WEST_SEA': '423_12', // 西海\r\n\r\n    // 形態變化 - 洛托姆\r\n    '479_NORMAL': '479_11', // 洛托姆的樣子\r\n    '479_HEAT': '479_12', // 加熱洛托姆\r\n    '479_WASH': '479_13', // 清洗洛托姆\r\n    '479_FROST': '479_14', // 結冰洛托姆\r\n    '479_FAN': '479_15', // 旋轉洛托姆\r\n    '479_MOW': '479_16', // 切割洛托姆\r\n\r\n    // 形態變化 - 騎拉帝納\r\n    '487_NORMAL': '487_11', // 別種形態\r\n    '487_ALTERED': '487_11', // 別種形態\r\n    '487_ORIGIN': '487_12', // 起源形態\r\n\r\n    // 形態變化 - 謝米\r\n    '492_NORMAL': '492_11', // 陸上形態\r\n    '492_LAND': '492_11', // 陸上形態\r\n    '492_SKY': '492_12', // 天空形態\r\n\r\n    // 形態變化 - 阿爾宙斯\r\n    '493_NORMAL': '493_00', // 一般\r\n    '493_FIGHTING': '493_12', // 格鬥\r\n    '493_FLYING': '493_13', // 飛行\r\n    '493_POISON': '493_14', // 毒\r\n    '493_GROUND': '493_15', // 地面\r\n    '493_ROCK': '493_16', // 岩石\r\n    '493_BUG': '493_17', // 蟲\r\n    '493_GHOST': '493_18', // 幽靈\r\n    '493_STEEL': '493_19', // 鋼\r\n    '493_FIRE': '493_20', // 火\r\n    '493_WATER': '493_21', // 水\r\n    '493_GRASS': '493_22', // 草\r\n    '493_ELECTRIC': '493_23', // 電\r\n    '493_PSYCHIC': '493_24', // 超能力\r\n    '493_ICE': '493_25', // 冰\r\n    '493_DRAGON': '493_26', // 龍\r\n    '493_DARK': '493_27', // 惡\r\n    '493_FAIRY': '493_28', // 妖精\r\n\r\n    // 形態變化 - 野蠻鱸魚\r\n    '550_NORMAL': '550_11', // 紅條紋的樣子\r\n    '550_RED_STRIPED': '550_11', // 紅條紋的樣子\r\n    '550_BLUE_STRIPED': '550_12', // 藍條紋的樣子\r\n\r\n    // 形態變化 - 達摩狒狒\r\n    '555_NORMAL': '555_11',\r\n    '555_STANDARD': '555_11',\r\n    '555_ZEN': '555_12', // 達摩模式\r\n\r\n    // 形態變化 - 四季鹿\r\n    '585_NORMAL': '585_11', // 春天的樣子\r\n    '585_SPRING': '585_11', // 春天的樣子\r\n    '585_SUMMER': '585_12', // 夏天的樣子\r\n    '585_AUTUMN': '585_13', // 秋天的樣子\r\n    '585_WINTER': '585_14', // 冬天的樣子\r\n\r\n    // 形態變化 - 萌芽鹿\r\n    '586_NORMAL': '586_11', // 春天的樣子\r\n    '586_SPRING': '586_11', // 春天的樣子\r\n    '586_SUMMER': '586_12', // 夏天的樣子\r\n    '586_AUTUMN': '586_13', // 秋天的樣子\r\n    '586_WINTER': '586_14', // 冬天的樣子\r\n\r\n    // 形態變化 - 龍捲雲\r\n    '641_NORMAL': '641_11', // 化身形態\r\n    '641_INCARNATE': '641_11', // 化身形態\r\n    '641_THERIAN': '641_12', // 靈獸形態\r\n\r\n    // 形態變化 - 雷電雲\r\n    '642_NORMAL': '642_11', // 化身形態\r\n    '642_INCARNATE': '642_11', // 化身形態\r\n    '642_THERIAN': '642_12', // 靈獸形態\r\n\r\n    // 形態變化 - 土地雲\r\n    '645_NORMAL': '645_11', // 化身形態\r\n    '645_INCARNATE': '645_11', // 化身形態\r\n    '645_THERIAN': '645_12', // 靈獸形態\r\n\r\n    // 形態變化 - 酋雷姆\r\n    '646_NORMAL': '646_11', // 酋雷姆的樣子\r\n    '646_BLACK': '646_13', // 闇黑酋雷姆\r\n    '646_WHITE': '646_12', // 焰白酋雷姆\r\n\r\n    // 形態變化 - 凱路迪歐\r\n    '647_NORMAL': '647_11', // 平常的樣子\r\n    '647_ORDINARY': '647_11', // 平常的樣子\r\n    '647_RESOLUTE': '647_12', // 覺悟的樣子\r\n\r\n    // 形態變化 - 美洛耶塔\r\n    '648_NORMAL': '648_11', // 歌聲形態\r\n    '648_ARIA': '648_11', // 歌聲形態\r\n    '648_PIROUETTE': '648_12', // 舞步形態\r\n\r\n    // 形態變化 - 蓋諾賽克特\r\n    '649_NORMAL': '649_11', // 蓋諾賽克特的樣子\r\n    '649_SHOCK': '649_13', // 閃電卡帶\r\n    '649_BURN': '649_14', // 火焰卡帶\r\n    '649_CHILL': '649_15', // 冰凍卡帶\r\n    '649_DOUSE': '649_12', // 水流卡帶\r\n\r\n    // 形態變化 - 彩粉蝶\r\n    // 形態變化 - 花蓓蓓\r\n    // 形態變化 - 花葉蒂\r\n    // 形態變化 - 花潔夫人\r\n    // 形態變化 - 多麗米亞\r\n    // 形態變化 - 堅盾劍怪\r\n    // 形態變化 - 南瓜精\r\n    // 形態變化 - 南瓜怪人\r\n    // 形態變化 - 基格爾德\r\n    // 形態變化 - 胡帕\r\n    // 形態變化 - 花舞鳥\r\n    // 形態變化 - 鬃岩狼人\r\n    // 形態變化 - 弱丁魚\r\n    // 形態變化 - 銀伴戰獸\r\n    // 形態變化 - 小隕星\r\n    // 形態變化 - 奈克洛茲瑪\r\n    // 形態變化 - 顫弦蠑螈\r\n    // 形態變化 - 冰砌鵝\r\n    // 形態變化 - 莫魯貝可\r\n    // 形態變化 - 蒼響\r\n    // 形態變化 - 藏瑪然特\r\n    // 形態變化 - 無極汰那\r\n    // 形態變化 - 武道熊師\r\n    // 形態變化 - 蕾冠王\r\n\r\n    // 地區形態 - 阿羅拉\r\n    '19_ALOLA': '019_61', // 小拉達\r\n    '20_ALOLA': '020_61', // 拉達\r\n    '26_ALOLA': '026_61', // 雷丘\r\n    '27_ALOLA': '027_61', // 穿山鼠\r\n    '28_ALOLA': '028_61', // 穿山王\r\n    '37_ALOLA': '037_61', // 六尾\r\n    '38_ALOLA': '038_61', // 九尾\r\n    '50_ALOLA': '050_61', // 地鼠\r\n    '51_ALOLA': '051_61', // 三地鼠\r\n    '52_ALOLA': '052_61', // 喵喵\r\n    '53_ALOLA': '053_61', // 貓老大\r\n    '74_ALOLA': '074_61', // 小拳石\r\n    '75_ALOLA': '075_61', // 隆隆石\r\n    '76_ALOLA': '076_61', // 隆隆岩\r\n    '88_ALOLA': '088_61', // 臭泥\r\n    '89_ALOLA': '089_61', // 臭臭泥\r\n    '103_ALOLA': '103_61', // 椰蛋樹\r\n    '105_ALOLA': '105_61', // 嘎啦嘎啦\r\n\r\n    // 地區形態 - 伽勒爾\r\n    '52_GALARIAN': '052_31', // 喵喵\r\n    '77_GALARIAN': '077_31', // 小火馬\r\n    '78_GALARIAN': '078_31', // 烈焰馬\r\n    '79_GALARIAN': '079_31', // 呆呆獸\r\n    '80_GALARIAN': '080_31', // 呆殼獸\r\n    '83_GALARIAN': '083_31', // 大蔥鴨\r\n    '110_GALARIAN': '110_31', // 雙彈瓦斯\r\n    '122_GALARIAN': '122_31', // 魔牆人偶\r\n    '144_GALARIAN': '144_31', // 急凍鳥\r\n    '145_GALARIAN': '145_31', // 閃電鳥\r\n    '146_GALARIAN': '146_31', // 火焰鳥\r\n    '199_GALARIAN': '199_31', // 呆呆王\r\n    '222_GALARIAN': '222_31', // 太陽珊瑚\r\n    '263_GALARIAN': '263_31', // 蛇紋熊\r\n    '264_GALARIAN': '264_31', // 直衝熊\r\n    '554_GALARIAN': '554_31', // 火紅不倒翁\r\n    '555_GALARIAN_STANDARD': '555_31', // 達摩狒狒\r\n    '555_GALARIAN_ZEN': '555_32', // 達摩狒狒 達摩模式\r\n    '562_GALARIAN': '562_31', // 哭哭面具\r\n    '618_GALARIAN': '618_31', // 泥巴魚\r\n    '862_NORMAL': '862_31', // 堵攔熊\r\n    '863_NORMAL': '863_31', // 喵頭目\r\n    '865_NORMAL': '865_31', // 蔥遊兵\r\n    '866_NORMAL': '866_31', // 踏冰人偶\r\n    '867_NORMAL': '867_31', // 死神板\r\n\r\n    // 例外 - 未知圖騰\r\n    '201_NORMAL': '201_11',\r\n\r\n    // 特殊外觀 - 皮卡丘\r\n    '25_VS_2019': '025_16', // 摔角皮卡丘\r\n    '25_COPY_2019': 'pm0025_00_pgo_copy2019', // 複製皮卡丘\r\n    '25_FALL_2019': 'pm0025_00_pgo_fall2019', // 萬聖節皮卡丘\r\n    '25_COSTUME_2020': 'pm0025_00_pgo_4thanniversary', // 飛翔皮卡丘\r\n    '25_ADVENTURE_HAT_2020': 'pm0025_01_pgo_movie2020', // 探險家皮卡丘\r\n    '25_WINTER_2020': 'pm0025_00_pgo_winter2020', // 冬季皮卡丘\r\n    '25_KARIYUSHI': 'pm0025_01_pikachu_pgo_kariyushi', // 沖繩皮卡丘\r\n    '25_FLYING_5TH_ANNIV': 'pm0025_01_pgo_5thanniversary', // 五週年飛翔皮卡丘\r\n    '25_ROCK_STAR': 'pm0025_01_pgo_rockstar', // 硬搖滾皮卡丘\r\n    '25_POP_STAR': 'pm0025_01_pgo_popstar', // 偶像皮卡丘\r\n\r\n    // 特殊外觀 - 電影超夢的逆襲\r\n    '3_COPY_2019': 'pm0003_00_pgo_copy2019', // 複製妙蛙花\r\n    '6_COPY_2019': 'pm0006_00_pgo_copy2019', // 複製噴火龍\r\n    '9_COPY_2019': 'pm0009_00_pgo_copy2019', // 複製水箭龜\r\n    '150_A': 'pm0150_00_pgo_a', // 裝甲超夢\r\n\r\n    // 特殊外觀 - 2019萬聖節\r\n    '1_FALL_2019': 'pm0001_00_pgo_fall2019', // 妙蛙種子\r\n    '4_FALL_2019': 'pm0004_00_pgo_fall2019', // 小火龍\r\n    '7_FALL_2019': 'pm0007_00_pgo_fall2019', // 傑尼龜\r\n\r\n    // 特殊外觀 - 2020萬聖節\r\n    '94_COSTUME_2020': '094_26', // 耿鬼\r\n    '302_COSTUME_2020': 'pm0302_00_pgo_fall2020', // 勾魂眼\r\n\r\n    // 特殊外觀 - 2020聖誕節\r\n    '225_WINTER_2020': 'pm0225_00_pgo_winter2020', // 信使鳥\r\n    '613_WINTER_2020': 'pm0613_00_pgo_winter2020', // 噴嚏熊\r\n\r\n    // 特殊外觀 - 2020跨年\r\n    '79_2020': 'pm0079_00_pgo_2020', // 呆呆獸\r\n    '80_2020': 'pm0080_00_pgo_2020', // 呆殼獸\r\n};\r\n\r\ninterface PokemonImageProps {\r\n    className?: string;\r\n    pokemonNo: number;\r\n    pokemonForm?: string;\r\n    shiny?: boolean;\r\n    size?: number;\r\n}\r\n\r\nconst getImageUrl = (pokemonNo: number, pokemonForm?: string, shiny?: boolean): string => {\r\n    const urlBase = 'https://raw.githubusercontent.com/PokeMiners/pogo_assets/master/Images/Pokemon%20-%20256x256';\r\n    const no = String(pokemonNo).padStart(3, '0');\r\n    const defaultImageText = `${no}_00`;\r\n\r\n    let imageText = imageTextTable[`${pokemonNo}_NORMAL`];\r\n\r\n    if (pokemonForm === 'PURIFIED' || pokemonForm === 'SHADOW') {\r\n        imageText = defaultImageText;\r\n    } else if (pokemonForm === 'MEGA' || pokemonForm === 'MEGA_X') {\r\n        imageText = `${no}_51`;\r\n    } else if (pokemonForm === 'MEGA_Y') {\r\n        imageText = `${no}_52`;\r\n    } else {\r\n        imageText = imageTextTable[`${pokemonNo}_${pokemonForm}`] || defaultImageText;\r\n    }\r\n\r\n    const imageUrl = shiny\r\n        ? `${urlBase}/pokemon_icon_${imageText}_shiny.png`\r\n        : `${urlBase}/pokemon_icon_${imageText}.png`;\r\n\r\n    return imageUrl;\r\n};\r\n\r\nconst unknownImageUrl = '/willow-pokedex/assets/unknown-pokemon.png';\r\n\r\nconst PokemonImage: React.FC<PokemonImageProps> = (props) => {\r\n    const { className } = props;\r\n\r\n    const {\r\n        pokemonNo,\r\n        pokemonForm = 'NORMAL',\r\n        shiny,\r\n        size,\r\n    } = props;\r\n\r\n    const [imageUrl, setImageUrl] = useState(unknownImageUrl);\r\n\r\n    useEffect(() => {\r\n        const url = getImageUrl(pokemonNo, pokemonForm, shiny);\r\n        setImageUrl(url);\r\n    }, [pokemonNo, pokemonForm, shiny])\r\n\r\n    return (\r\n        <Image className={className} preview={false} width={size} height={size}\r\n            src={imageUrl}\r\n            onError={() => setImageUrl(unknownImageUrl)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PokemonImage;\r\n","// Node modules.\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Image } from 'antd';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport LegacyImage from './Image';\r\n\r\ninterface PokemonAddressedImageProps {\r\n    className?: string;\r\n    pokemonNo: number;\r\n    pokemonForm?: string;\r\n    collection?: string;\r\n    secondGender?: boolean;\r\n    shiny?: boolean;\r\n    size?: number;\r\n}\r\n\r\nconst getImageUrl = (pokemonNo: number, pokemonForm?: string, collection?: string, secondGender?: boolean, shiny?: boolean): string => {\r\n    const urlBase = 'https://raw.githubusercontent.com/PokeMiners/pogo_assets/master/Images/Pokemon%20-%20256x256/Addressable%20Assets';\r\n    const imageText = [\r\n        // Part 1: No\r\n        `pm${pokemonNo}`,\r\n        // Part 2: Form\r\n        pokemonForm !== 'NORMAL' && `f${pokemonForm}`,\r\n        // Part 3: Collection\r\n        collection && `c${collection}`,\r\n        // Part 4: Gender\r\n        secondGender && 'g2',\r\n        // Part 5: Shiny\r\n        shiny && 's',\r\n    ].filter(Boolean).join('.');\r\n\r\n    const imageUrl = `${urlBase}/${imageText}.icon.png`;\r\n\r\n    return imageUrl;\r\n};\r\n\r\nconst unknownImageUrl = '/willow-pokedex/assets/unknown-pokemon.png';\r\n\r\nconst PokemonAddressedImage: React.FC<PokemonAddressedImageProps> = (props) => {\r\n    const { className } = props;\r\n\r\n    const {\r\n        pokemonNo,\r\n        pokemonForm = 'NORMAL',\r\n        collection,\r\n        secondGender,\r\n        shiny,\r\n        size,\r\n    } = props;\r\n\r\n    const [imageUrl, setImageUrl] = useState(unknownImageUrl);\r\n    const [addressable, setAddressable] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const url = getImageUrl(pokemonNo, pokemonForm, collection, secondGender, shiny);\r\n        setImageUrl(url);\r\n        setAddressable(true);\r\n    }, [pokemonNo, pokemonForm, collection, secondGender, shiny]);\r\n\r\n    return (addressable\r\n        ? <Image className={className} preview={false} width={size} height={size}\r\n            src={imageUrl}\r\n            onError={() => setAddressable(false)}\r\n        />\r\n        : <LegacyImage className={className}\r\n            pokemonNo={pokemonNo}\r\n            pokemonForm={pokemonForm}\r\n            shiny={shiny}\r\n            size={size}\r\n        />\r\n    );\r\n};\r\n\r\nconst styledPokemonAddressedImage = styled(PokemonAddressedImage)`\r\n& {\r\n    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.5));\r\n}\r\n`;\r\n\r\nexport default styledPokemonAddressedImage;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Image } from 'antd';\r\n// Local modules.\r\nimport type { PokemonType } from '../../models/pokemon';\r\n\r\ninterface PokemonTypeIconProps {\r\n    pokemonType: PokemonType;\r\n    size?: number;\r\n}\r\n\r\nconst PokemonTypeIcon: React.FC<PokemonTypeIconProps> = (props) => {\r\n    const {\r\n        pokemonType,\r\n        size = 50,\r\n    } = props;\r\n\r\n    const urlBase = 'https://raw.githubusercontent.com/PokeMiners/pogo_assets/master/Images/Types/';\r\n    const typeText = pokemonType.replace(/POKEMON_TYPE_/, '');\r\n    const imageUrl = `${urlBase}/POKEMON_TYPE_${typeText}.png`;\r\n\r\n    return (\r\n        <Image preview={false} width={size} height={size}\r\n            src={imageUrl}\r\n        />\r\n    );\r\n};\r\n\r\nexport default PokemonTypeIcon;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport type { IPokemon } from '../../models/pokemon';\r\nimport * as Pokemon from '../../components/pokemon';\r\n\r\ninterface PokemonTypesProps {\r\n    className?: string;\r\n    pokemon: IPokemon;\r\n}\r\n\r\nconst PokemonTypes: React.FC<PokemonTypesProps> = (props) => {\r\n    const { className } = props;\r\n    const { pokemon } = props;\r\n\r\n    return (\r\n        <div id='types' className={className}>\r\n            <Row className='types' justify={'center'} align={'middle'}>\r\n                {pokemon.types.map((type, i) => (\r\n                    <Col key={i} span={6}>\r\n                        <Pokemon.TypeIcon pokemonType={type} size={35} />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonTypes = styled(PokemonTypes)`\r\n& {\r\n    text-align: center;\r\n    padding: 1em;\r\n    margin-bottom: 2em;\r\n}\r\n`;\r\n\r\nexport default styledPokemonTypes;\r\n","// Node modules.\r\nimport { maxBy } from 'lodash';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Divider, Image, Typography, Progress } from 'antd';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport type { IPokemon, IPokemonStatus } from '../../models/pokemon';\r\n\r\ninterface PokemonStatProps {\r\n    type: 'attack' | 'defense' | 'stamina';\r\n    value: number;\r\n    percent: number;\r\n}\r\n\r\nconst PokemonStat: React.FC<PokemonStatProps> = (props) => {\r\n    const { type, value, percent } = props;\r\n\r\n    let displayText = '';\r\n    let strokeColor = '';\r\n\r\n    switch (type) {\r\n        case 'attack':\r\n            displayText = '攻擊';\r\n            strokeColor = '#f44336';\r\n            break;\r\n        case 'defense':\r\n            displayText = '防禦';\r\n            strokeColor = '#4e91fc';\r\n            break;\r\n        case 'stamina':\r\n            displayText = 'HP';\r\n            strokeColor = '#f7b24a';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Row justify={'center'} align={'middle'}>\r\n            <Col span={5} style={{ textAlign: 'right' }}>\r\n                <Typography.Text>\r\n                    {displayText}\r\n                </Typography.Text>\r\n            </Col>\r\n\r\n            <Col span={4} style={{ textAlign: 'right' }}>\r\n                <Typography.Text>\r\n                    {value}\r\n                </Typography.Text>\r\n            </Col>\r\n\r\n            <Col span={1} />\r\n\r\n            <Col span={14}>\r\n                <Progress status='active' showInfo={false}\r\n                    strokeWidth={12}\r\n                    percent={percent}\r\n                    strokeColor={strokeColor}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\n\r\ninterface PokemonStatsProps {\r\n    className?: string;\r\n    allPokemons: IPokemon[];\r\n    pokemon?: IPokemon;\r\n}\r\n\r\nconst PokemonStats: React.FC<PokemonStatsProps> = (props) => {\r\n    const { className } = props;\r\n    const { allPokemons, pokemon } = props;\r\n\r\n    const [maximum, setMaximum] = useState<IPokemonStatus>(pokemon?.stats!);\r\n\r\n    useEffect(() => {\r\n        setMaximum({\r\n            baseStamina: maxBy(allPokemons, (pokemon) => pokemon.stats.baseStamina)?.stats.baseAttack!,\r\n            baseAttack: maxBy(allPokemons, (pokemon) => pokemon.stats.baseAttack)?.stats.baseAttack!,\r\n            baseDefense: maxBy(allPokemons, (pokemon) => pokemon.stats.baseDefense)?.stats.baseDefense!,\r\n        });\r\n    }, [allPokemons]);\r\n\r\n    if (!pokemon) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div id='stats' className={className}>\r\n            <Divider plain orientation='center'>\r\n                <Image preview={false} height={30} width={30}\r\n                    src={'/willow-pokedex/assets/pokemon_stats.png'}\r\n                />\r\n                <Typography.Title className='divider-title' level={5}>\r\n                    {'能力素質'}\r\n                </Typography.Title>\r\n            </Divider>\r\n\r\n            <Row justify={'center'} align={'middle'}>\r\n                <Col className='pokemon-stat' span={24}>\r\n                    <PokemonStat\r\n                        type='attack'\r\n                        value={pokemon.stats.baseAttack}\r\n                        percent={pokemon.stats.baseAttack / maximum.baseAttack * 100}\r\n                    />\r\n                </Col>\r\n\r\n                <Col className='pokemon-stat' span={24}>\r\n                    <PokemonStat\r\n                        type='defense'\r\n                        value={pokemon.stats.baseDefense}\r\n                        percent={pokemon.stats.baseDefense / maximum.baseDefense * 100}\r\n                    />\r\n                </Col>\r\n\r\n                <Col className='pokemon-stat' span={24}>\r\n                    <PokemonStat\r\n                        type='stamina'\r\n                        value={pokemon.stats.baseStamina}\r\n                        percent={pokemon.stats.baseStamina / maximum.baseDefense * 100}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonStats = styled(PokemonStats)`\r\n& {\r\n    margin-bottom: 3em;\r\n    \r\n    .pokemon-stat {\r\n        text-align: center;\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledPokemonStats;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Col, Divider, Image, Row, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport { IPokemon } from '../../models/pokemon';\r\n\r\ninterface PokemonAboutProps {\r\n    className?: string;\r\n    pokemon: IPokemon;\r\n}\r\n\r\nconst PokemonAbout: React.FC<PokemonAboutProps> = (props) => {\r\n    const { className } = props;\r\n    const { pokemon } = props;\r\n\r\n    return (\r\n        <div id='about' className={className}>\r\n            <Divider plain orientation='center'>\r\n                <Image preview={false} height={30} width={47}\r\n                    src={'/willow-pokedex/assets/pokemon_desc.png'}\r\n                />\r\n                <Typography.Title className='divider-title' level={5}>\r\n                    {'關於'}\r\n                </Typography.Title>\r\n            </Divider>\r\n\r\n            <Row align='middle'>\r\n                <Col className='' flex={1}>\r\n                    <Typography.Title level={5}>\r\n                        {pokemon.category}\r\n                    </Typography.Title>\r\n\r\n                    <Typography.Paragraph>\r\n                        {pokemon.description}\r\n                    </Typography.Paragraph>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonAbout = styled(PokemonAbout)`\r\n& {\r\n    margin-bottom: 3em;\r\n}\r\n`;\r\n\r\nexport default styledPokemonAbout;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Divider, Image, Typography, Card, Badge } from 'antd';\r\nimport Xarrow from 'react-xarrows';\r\nimport { useVisible } from 'react-hooks-visible';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport type { IPokemon } from '../../models/pokemon';\r\nimport * as Pokemon from '../../components/pokemon';\r\nimport type { IEvolutionNode } from '../../utils/generate-evolution-tree';\r\nimport { useCallback } from 'react';\r\n\r\nconst getDistinctId = (pokemon: IPokemon) => `${pokemon.no}-${pokemon.form}`;\r\n\r\ninterface CostBadgeProps {\r\n    className?: string;\r\n    cost?: number;\r\n    type?: 'mega' | 'male' | 'female';\r\n}\r\n\r\nconst CostBadge: React.FC<CostBadgeProps> = (props) => {\r\n    const { className } = props;\r\n    const { cost, type } = props;\r\n\r\n    if (cost === undefined) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Badge className={[className, type].join(' ')}\r\n            count={cost}\r\n            overflowCount={999}\r\n            size='small'\r\n        />\r\n    );\r\n};\r\n\r\nconst StyledCostBadge = styled(CostBadge)`\r\n& {\r\n    @keyframes gradient {\r\n        0% {\r\n            background-position: 0% 50%;\r\n        }\r\n        50% {\r\n            background-position: 100% 50%;\r\n        }\r\n        100% {\r\n            background-position: 0% 50%;\r\n        }\r\n    }\r\n\r\n    .ant-badge-count {\r\n        background-color: #ACACAC;\r\n        z-index: 10;\r\n    }\r\n\r\n    &.mega .ant-badge-count {\r\n        background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);\r\n        background-size: 300% 300%;\r\n        animation: gradient 3s ease infinite;\r\n    }\r\n\r\n    &.female .ant-badge-count {\r\n        background-color: #F472B6;\r\n    }\r\n\r\n    &.male .ant-badge-count {\r\n        background-color: #3B82F6;\r\n    }\r\n}\r\n`;\r\n\r\ninterface PokemonEvolutionCellProps {\r\n    className?: string;\r\n    evolutionNode?: IEvolutionNode;\r\n    previousNode?: IEvolutionNode;\r\n}\r\n\r\nconst PokemonEvolutionCell: React.FC<PokemonEvolutionCellProps> = (props) => {\r\n    const { className } = props;\r\n    const { evolutionNode, previousNode } = props;\r\n\r\n    const scrollToTop = useCallback(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }, []);\r\n\r\n    if (!evolutionNode?.pokemon) {\r\n        return null;\r\n    }\r\n\r\n    const { pokemon, requirement } = evolutionNode;\r\n    const hasBranches = !!evolutionNode.branches?.length;\r\n\r\n    // Mega / Female / Male ... etc\r\n    let costBadge = <StyledCostBadge cost={requirement?.candyCost} />;\r\n    let lineColor = '#ACACAC';\r\n    if (!!requirement?.energyCost) {\r\n        costBadge = <StyledCostBadge cost={requirement?.energyCost} type='mega' />;\r\n        lineColor = '#23D5AB';\r\n    } else if (requirement?.gender === 'FEMALE') {\r\n        costBadge = <StyledCostBadge cost={requirement?.candyCost} type='female' />;\r\n        lineColor = '#F472B6';\r\n    } else if (requirement?.gender === 'MALE') {\r\n        costBadge = <StyledCostBadge cost={requirement?.candyCost} type='male' />;\r\n        lineColor = '#3B82F6';\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Col flex={1}>\r\n                <Link\r\n                    onClick={scrollToTop}\r\n                    to={`/pokemons/${pokemon.no}/${pokemon.form?.toLowerCase()}`}\r\n                >\r\n                    <Card id={getDistinctId(pokemon)} className={`pokemon-card ${hasBranches ? 'can-evolute' : ''}`}\r\n                        hoverable\r\n                        cover={\r\n                            <Pokemon.AddressedImage\r\n                                pokemonNo={pokemon.no}\r\n                                pokemonForm={pokemon.form}\r\n                            />\r\n                        }\r\n                    >\r\n                        <Card.Meta\r\n                            title={pokemon.name}\r\n                        />\r\n                    </Card>\r\n                </Link>\r\n\r\n                {hasBranches &&\r\n                    <Row justify='center' align='top'>\r\n                        {evolutionNode.branches?.map((en) =>\r\n                            <StyledPokemonEvolutionCell\r\n                                evolutionNode={en}\r\n                                previousNode={evolutionNode}\r\n                            />\r\n                        )}\r\n                    </Row>\r\n                }\r\n            </Col>\r\n\r\n            {/* Draw the evolution connection */}\r\n            {previousNode &&\r\n                <Xarrow\r\n                    start={getDistinctId(previousNode.pokemon)}\r\n                    end={getDistinctId(pokemon)}\r\n                    label={costBadge}\r\n                    animateDrawing\r\n                    color={lineColor}\r\n                    dashness={{ strokeLen: 3, nonStrokeLen: 2, animation: 1 }}\r\n                    headSize={4}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst StyledPokemonEvolutionCell = styled(PokemonEvolutionCell)`\r\n& {\r\n    &:not(:last-child) {\r\n        margin-right: .5em;\r\n    }\r\n\r\n    &:not(:first-child) {\r\n        margin-left: .5em;\r\n    }\r\n\r\n    .pokemon-card {\r\n        width: calc(23vw);\r\n        max-width: 100px;\r\n        border-radius: 5px;\r\n        background-color: #FAFAFA;\r\n        padding: 2px;\r\n        margin: 0 auto;\r\n\r\n        &.can-evolute {\r\n            margin-bottom: 60px;\r\n        }\r\n\r\n        /* Overwrite antd components */\r\n        .ant-card-body {\r\n            padding: 0 0 .5em 0 !important;\r\n            text-align: center;\r\n        }\r\n\r\n        .ant-card-meta {\r\n            justify-content: center;\r\n        }\r\n\r\n        .ant-card-meta-title {\r\n            font-size: .95em;\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\ninterface PokemonEvolutionTreeProps {\r\n    className?: string;\r\n    evolutionTree: IEvolutionNode | null;\r\n}\r\n\r\nconst PokemonEvolutionTree: React.FC<PokemonEvolutionTreeProps> = (props) => {\r\n    const { className } = props;\r\n    const { evolutionTree } = props;\r\n\r\n    // This is a workaround to force update 'Xarrow' when switching tabs & forms.\r\n    const [targetRef] = useVisible((visible: number) => visible > 0.1);\r\n\r\n    if (!evolutionTree) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div ref={targetRef as any} id='evolution-tree' className={className}>\r\n            <Divider plain orientation='center'>\r\n                <Image preview={false} height={30} width={32}\r\n                    src={'/willow-pokedex/assets/pokemon_evolution.png'}\r\n                />\r\n                <Typography.Title className='divider-title' level={5}>\r\n                    {'進化路線'}\r\n                </Typography.Title>\r\n            </Divider>\r\n\r\n            <Row className='container' justify='center' align='middle'>\r\n                <StyledPokemonEvolutionCell\r\n                    evolutionNode={evolutionTree}\r\n                />\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonEvolutionTree = styled(PokemonEvolutionTree)`\r\n& {\r\n    margin-bottom: 3em;\r\n    position: relative;\r\n}\r\n\r\n.container {\r\n    background-color: #EEEEEE;\r\n    border-radius: 5px;\r\n    padding: 1em 0.5em;\r\n}\r\n`;\r\n\r\nexport default styledPokemonEvolutionTree;\r\n","// Node modules.\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Typography,\r\n    Checkbox,\r\n    Divider,\r\n    Image,\r\n    Tag,\r\n} from 'antd';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport { IPokemon, ILeagueRanking } from '../../models/pokemon';\r\nimport * as Pokemon from '../../components/pokemon';\r\n\r\ntype Mode = 'pve' | 'pvp';\r\n\r\ninterface PokemonMoveTableProps {\r\n    className?: string;\r\n    pokemon: IPokemon;\r\n    mode: Mode;\r\n    leagueRanking?: ILeagueRanking;\r\n}\r\n\r\nconst PokemonMoveTable: React.FC<PokemonMoveTableProps> = (props) => {\r\n    const { className } = props;\r\n    const { pokemon, mode, leagueRanking } = props;\r\n\r\n    const [detailed, setDetailed] = useState(false);\r\n\r\n    const toggleDetailMode = (e: CheckboxChangeEvent) => {\r\n        setDetailed(e.target.checked);\r\n    };\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Divider plain orientation='center'>\r\n                <Image preview={false} height={30} width={57.7}\r\n                    src={'/willow-pokedex/assets/quick_move.png'}\r\n                />\r\n                <Typography.Title className='divider-title' level={5}>\r\n                    {'一般招式'}\r\n                </Typography.Title>\r\n            </Divider>\r\n\r\n            <div className='detail-checkbox'>\r\n                <Checkbox checked={detailed} onChange={toggleDetailMode}>\r\n                    {'詳細數據'}\r\n                </Checkbox>\r\n            </div>\r\n\r\n            <Pokemon.MoveHeader\r\n                detailed={detailed}\r\n            />\r\n\r\n            {pokemon.quickMoves.map((move) => (\r\n                <Pokemon.Move key={move.uniqueId}\r\n                    move={move}\r\n                    mode={mode}\r\n                    detailed={detailed}\r\n                    bestCombatMoveIds={leagueRanking?.quickMoveIds}\r\n                />\r\n            ))}\r\n\r\n            {pokemon.eliteQuickMoves.map((move) => (\r\n                <Pokemon.Move key={move.uniqueId}\r\n                    move={move}\r\n                    mode={mode}\r\n                    legacy={true}\r\n                    detailed={detailed}\r\n                    bestCombatMoveIds={leagueRanking?.quickMoveIds}\r\n                />\r\n            ))}\r\n\r\n            <Divider plain orientation='center'>\r\n                <Image preview={false} height={30} width={57.7}\r\n                    src={'/willow-pokedex/assets/cinematic_move.png'}\r\n                />\r\n                <Typography.Title className='divider-title' level={5}>\r\n                    {'特殊招式'}\r\n                </Typography.Title>\r\n            </Divider>\r\n\r\n            <div className='detail-checkbox'>\r\n                <Checkbox checked={detailed} onChange={toggleDetailMode}>\r\n                    {'詳細數據'}\r\n                </Checkbox>\r\n            </div>\r\n\r\n            <Pokemon.MoveHeader\r\n                detailed={detailed}\r\n            />\r\n\r\n            {pokemon.cinematicMoves.map((move) => (\r\n                <Pokemon.Move key={move.uniqueId}\r\n                    move={move}\r\n                    mode={mode}\r\n                    detailed={detailed}\r\n                    bestCombatMoveIds={leagueRanking?.cinematicMoveIds}\r\n                />\r\n            ))}\r\n\r\n            {pokemon.eliteCinematicMoves.map((move) => (\r\n                <Pokemon.Move key={move.uniqueId}\r\n                    move={move}\r\n                    mode={mode}\r\n                    legacy={true}\r\n                    detailed={detailed}\r\n                    bestCombatMoveIds={leagueRanking?.cinematicMoveIds}\r\n                />\r\n            ))}\r\n\r\n            <Divider />\r\n\r\n            {!detailed &&\r\n                <Row gutter={[8, 8]}>\r\n                    <Col span={24}>\r\n                        <Row align='middle'>\r\n                            <Col flex={0}>\r\n                                <Tag color='red'>{'絕版'}</Tag>\r\n                            </Col>\r\n                            <Col flex={1}>\r\n                                <Typography.Text>\r\n                                    {'招式須透過活動或厲害招式學習器習得'}\r\n                                </Typography.Text>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    {pokemon.form === 'PURIFIED' &&\r\n                        <Col span={24}>\r\n                            <Row align='middle'>\r\n                                <Col flex={0}>\r\n                                    <Tag color='cyan'>{'淨化'}</Tag>\r\n                                </Col>\r\n                                <Col flex={1}>\r\n                                    <Typography.Text>\r\n                                        {'招式需透過淨化暗影寶可夢獲得'}\r\n                                    </Typography.Text>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    }\r\n\r\n                    {pokemon.form === 'SHADOW' &&\r\n                        <Col span={24}>\r\n                            <Row align='middle'>\r\n                                <Col flex={0}>\r\n                                    <Tag color='purple'>{'暗影'}</Tag>\r\n                                </Col>\r\n                                <Col flex={1}>\r\n                                    <Typography.Text>\r\n                                        {'捕獲暗影寶可夢時會獲得該招式'}\r\n                                    </Typography.Text>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    }\r\n\r\n                    {[...pokemon.eliteQuickMoves, ...pokemon.eliteCinematicMoves].find(m => m.isCommunityMove) &&\r\n                        <Col span={24}>\r\n                            <Row align='middle'>\r\n                                <Col flex={0}>\r\n                                    <Tag color='green'>{'社群'}</Tag>\r\n                                </Col>\r\n                                <Col flex={1}>\r\n                                    <Typography.Text>\r\n                                        {'該招式曾釋出於社群日的主題寶可夢'}\r\n                                    </Typography.Text>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    }\r\n                </Row>\r\n            }\r\n            \r\n            {detailed &&\r\n                <Row gutter={[8, 8]}>\r\n                    <Col span={24}>\r\n                        <Row align='middle'>\r\n                            <Col flex={0}>\r\n                                <Tag color='blue'>{'DPS'}</Tag>\r\n                            </Col>\r\n                            <Col flex={1}>\r\n                                <Typography.Text>\r\n                                    {'每秒可造成傷害'}\r\n                                </Typography.Text>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Row align='middle'>\r\n                            <Col flex={0}>\r\n                                <Tag color='blue'>{'EPS'}</Tag>\r\n                            </Col>\r\n                            <Col flex={1}>\r\n                                <Typography.Text>\r\n                                    {'每秒可產生能量'}\r\n                                </Typography.Text>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n\r\n                    <Col span={24}>\r\n                        <Row align='middle'>\r\n                            <Col flex={0}>\r\n                                <Tag color='blue'>{'時間'}</Tag>\r\n                            </Col>\r\n                            <Col flex={1}>\r\n                                <Typography.Text>\r\n                                    {'技能施放時間 (秒 second)'}\r\n                                </Typography.Text>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonMoveTable = styled(PokemonMoveTable)`\r\n& {\r\n    .detail-checkbox {\r\n        text-align: right;\r\n        margin-bottom: 0.25em;\r\n\r\n        label {\r\n            transform: scale(0.85);\r\n            transform-origin: right;\r\n\r\n            span {\r\n                padding-right: 0;\r\n                color: rgba(0,0,0,0.55) !important;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* Overwrite antd components */\r\n    .ant-tag {\r\n        border: none;\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledPokemonMoveTable;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Row, Col, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\ninterface PokemonMoveHeaderProps {\r\n    className?: string;\r\n    detailed?: boolean;\r\n}\r\n\r\nconst PokemonMoveHeader: React.FC<PokemonMoveHeaderProps> = (props) => {\r\n    const { className } = props;\r\n    const { detailed } = props;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Row className='pokemon-move-header' wrap={false} gutter={1} align='middle'>\r\n                <Col flex='auto' />\r\n\r\n                <Col className='cell' span={3}>\r\n                    <Typography.Text>\r\n                        {'傷害'}\r\n                    </Typography.Text>\r\n                </Col>\r\n\r\n                <Col className='cell' span={3}>\r\n                    <Typography.Text>\r\n                        {'能量'}\r\n                    </Typography.Text>\r\n                </Col>\r\n\r\n                {detailed &&\r\n                    <Col className='cell' span={3}>\r\n                        <Typography.Text>\r\n                            {'DPS'}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                }\r\n\r\n                {detailed &&\r\n                    <Col className='cell' span={3}>\r\n                        <Typography.Text>\r\n                            {'EPS'}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                }\r\n\r\n                {detailed &&\r\n                    <Col className='cell' span={3}>\r\n                        <Typography.Text>\r\n                            {'時間'}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonMoveHeader = styled(PokemonMoveHeader)`\r\n.pokemon-move-header {\r\n    .cell {\r\n        text-align: right;\r\n\r\n        span {\r\n            font-size: 0.75em;\r\n            color: rgba(0, 0, 0, 0.55) !important;\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledPokemonMoveHeader;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Col, Row, Button, Badge, Image } from 'antd';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport type { IPokemon, League } from '../../models/pokemon';\r\n\r\ninterface RankingButtonProps {\r\n    ranking?: number;\r\n    imageSrc: string;\r\n    league: League;\r\n    setLeague: React.Dispatch<React.SetStateAction<League | undefined>>;\r\n    active: boolean;\r\n}\r\n\r\nconst RankingButton: React.FC<RankingButtonProps> = (props) => {\r\n    const { ranking, imageSrc, league, setLeague, active } = props;\r\n\r\n    return (\r\n        <Button type={active ? 'primary' : 'link'}\r\n            onClick={() => setLeague(league)}\r\n        >\r\n            <Badge\r\n                count={ranking || '-'}\r\n                overflowCount={999}\r\n            >\r\n                <Image preview={false} height={45} width={45}\r\n                    src={imageSrc}\r\n                />\r\n            </Badge>\r\n        </Button>\r\n    );\r\n};\r\n\r\ninterface PokemonCombatRankingProps {\r\n    className?: string;\r\n    pokemon: IPokemon;\r\n    league?: League;\r\n    setLeague: React.Dispatch<React.SetStateAction<League | undefined>>;\r\n}\r\n\r\nconst PokemonCombatRanking: React.FC<PokemonCombatRankingProps> = (props) => {\r\n    const { className } = props;\r\n    const { pokemon, league, setLeague } = props;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <Col className='pokemon-ranking' flex={1}>\r\n                <RankingButton\r\n                    ranking={pokemon.greatLeague?.ranking}\r\n                    imageSrc={'/willow-pokedex/assets/combat_great_league.png'}\r\n                    league={'greatLeague'}\r\n                    setLeague={setLeague}\r\n                    active={league === 'greatLeague'}\r\n                />\r\n            </Col>\r\n\r\n            <Col className='pokemon-ranking' flex={1}>\r\n                <RankingButton\r\n                    ranking={pokemon.ultraLeague?.ranking}\r\n                    imageSrc={'/willow-pokedex/assets/combat_ultra_league.png'}\r\n                    league={'ultraLeague'}\r\n                    setLeague={setLeague}\r\n                    active={league === 'ultraLeague'}\r\n                />\r\n            </Col>\r\n\r\n            <Col className='pokemon-ranking' flex={1}>\r\n                <RankingButton\r\n                    ranking={pokemon.masterLeague?.ranking}\r\n                    imageSrc={'/willow-pokedex/assets/combat_master_league.png'}\r\n                    league={'masterLeague'}\r\n                    setLeague={setLeague}\r\n                    active={league === 'masterLeague'}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nconst styledPokemonCombatRanking = styled(PokemonCombatRanking)`\r\n& {\r\n    padding-bottom: 1em;\r\n}\r\n\r\n.pokemon-ranking {\r\n    text-align: center;\r\n\r\n    button {\r\n        padding: 2em 2em 5em 2em;\r\n\r\n        &.ant-btn-primary {\r\n            background: rgba(24, 144, 255, 0.15);\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledPokemonCombatRanking;\r\n","// Node modules.\r\nimport React from 'react';\r\nimport { Divider, Image, Table, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\ninterface PokemonCombatPowerProps {\r\n    className?: string;\r\n    cpTable: {\r\n        [level: string]: number;\r\n    };\r\n}\r\n\r\nconst PokemonCombatPower: React.FC<PokemonCombatPowerProps> = (props) => {\r\n    const { className } = props;\r\n    const { cpTable } = props;\r\n\r\n    const data = [\r\n        { level: 15, cp: cpTable['15'], description: '調查課題遭遇' },\r\n        { level: 20, cp: cpTable['20'], description: '孵化 / 團體戰' },\r\n        { level: 25, cp: cpTable['25'], description: '團體戰 (天氣加成)' },\r\n        { level: 30, cp: cpTable['30'], description: '野生遭遇' },\r\n        { level: 35, cp: cpTable['35'], description: '野生遭遇 (天氣加成)' },\r\n        { level: 40, cp: cpTable['40'], description: '最高等級' },\r\n        { level: 50, cp: cpTable['50'], description: '最高等級 (XL)' },\r\n    ];\r\n\r\n    return (\r\n        <div id='combat-power' className={className}>\r\n            <Divider plain orientation='center'>\r\n                <Image preview={false} height={30} width={30}\r\n                    src={'/willow-pokedex/assets/pokemon_cp.png'}\r\n                />\r\n\r\n                <Typography.Title className='divider-title' level={5}>\r\n                    {'最大 CP'}\r\n                </Typography.Title>\r\n            </Divider>\r\n\r\n            <Table dataSource={data} pagination={false} size='small' showHeader={false}>\r\n                <Table.Column\r\n                    align='center'\r\n                    key='level'\r\n                    dataIndex='level'\r\n                    render={(value) => (\r\n                        <Typography.Text strong>\r\n                            {`等級 ${value}`}\r\n                        </Typography.Text>\r\n                    )}\r\n                />\r\n\r\n                <Table.Column\r\n                    key='description'\r\n                    dataIndex='description'\r\n                    render={(value) => (\r\n                        <Typography.Text type='secondary'>\r\n                            {value}\r\n                        </Typography.Text>\r\n                    )}\r\n                />\r\n\r\n                <Table.Column\r\n                    key='cp'\r\n                    dataIndex='cp'\r\n                />\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledPokemonCombatPower = styled(PokemonCombatPower)`\r\n`;\r\n\r\nexport default styledPokemonCombatPower;\r\n","// Node modules.\r\nimport React from 'react';\r\n// Local modules.\r\nimport type { IPokemon } from '../models/pokemon';\r\n\r\nexport const PokemonContext = React.createContext([] as IPokemon[]);\r\n","const formTable: { [idx: string]: string } = {\r\n    // 形態變化 - 飄浮泡泡\r\n    '351_NORMAL': '飄浮泡泡的樣子',\r\n    '351_SUNNY': '太陽的樣子',\r\n    '351_RAINY': '雨水的樣子',\r\n    '351_SNOWY': '雪雲的樣子',\r\n\r\n    // 形態變化 - 代歐奇希斯\r\n    '386_NORMAL': '普通形態',\r\n    '386_ATTACK': '攻擊形態',\r\n    '386_DEFENSE': '防禦形態',\r\n    '386_SPEED': '速度形態',\r\n\r\n    // 形態變化 - 結草兒\r\n    // '412_NORMAL': '草木蓑衣',\r\n    '412_PLANT': '草木蓑衣',\r\n    '412_SANDY': '砂土蓑衣',\r\n    '412_TRASH': '垃圾蓑衣',\r\n\r\n    // 形態變化 - 結草貴婦\r\n    // '413_NORMAL': '草木蓑衣',\r\n    '413_PLANT': '草木蓑衣',\r\n    '413_SANDY': '砂土蓑衣',\r\n    '413_TRASH': '垃圾蓑衣',\r\n\r\n    // 形態變化 - 櫻花兒\r\n    // '421_NORMAL': '陰天形態',\r\n    '421_OVERCAST': '陰天形態',\r\n    '421_SUNNY': '晴天形態',\r\n\r\n    // 形態變化 - 無殼海兔\r\n    // '422_NORMAL': '西海',\r\n    '422_EAST_SEA': '東海',\r\n    '422_WEST_SEA': '西海',\r\n\r\n    // 形態變化 - 海兔獸\r\n    // '423_NORMAL': '西海',\r\n    '423_EAST_SEA': '東海',\r\n    '423_WEST_SEA': '西海',\r\n\r\n    // 形態變化 - 洛托姆\r\n    '479_NORMAL': '洛托姆的樣子',\r\n    '479_HEAT': '加熱洛托姆',\r\n    '479_WASH': '清洗洛托姆',\r\n    '479_FROST': '結冰洛托姆',\r\n    '479_FAN': '旋轉洛托姆',\r\n    '479_MOW': '切割洛托姆',\r\n\r\n    // 形態變化 - 騎拉帝納\r\n    // '487_NORMAL': '別種形態',\r\n    '487_ALTERED': '別種形態',\r\n    '487_ORIGIN': '起源形態',\r\n\r\n    // 形態變化 - 謝米\r\n    // '492_NORMAL': '陸上形態',\r\n    '492_LAND': '陸上形態',\r\n    '492_SKY': '天空形態',\r\n\r\n    // 形態變化 - 阿爾宙斯\r\n    '493_NORMAL': '一般',\r\n    '493_FIGHTING': '格鬥',\r\n    '493_FLYING': '飛行',\r\n    '493_POISON': '毒',\r\n    '493_GROUND': '地面',\r\n    '493_ROCK': '岩石',\r\n    '493_BUG': '蟲',\r\n    '493_GHOST': '幽靈',\r\n    '493_STEEL': '鋼',\r\n    '493_FIRE': '火',\r\n    '493_WATER': '水',\r\n    '493_GRASS': '草',\r\n    '493_ELECTRIC': '電',\r\n    '493_PSYCHIC': '超能力',\r\n    '493_ICE': '冰',\r\n    '493_DRAGON': '龍',\r\n    '493_DARK': '惡',\r\n    '493_FAIRY': '妖精',\r\n\r\n    // 形態變化 - 野蠻鱸魚\r\n    // '550_NORMAL': '紅條紋的樣子',\r\n    '550_RED_STRIPED': '紅條紋的樣子',\r\n    '550_BLUE_STRIPED': '藍條紋的樣子',\r\n\r\n    // 形態變化 - 達摩狒狒\r\n    // '555_NORMAL': '平常的樣子',\r\n    '555_STANDARD': '平常的樣子',\r\n    '555_ZEN': '達摩模式',\r\n\r\n    // 形態變化 - 四季鹿\r\n    // '585_NORMAL': '春天的樣子',\r\n    '585_SPRING': '春天的樣子',\r\n    '585_SUMMER': '夏天的樣子',\r\n    '585_AUTUMN': '秋天的樣子',\r\n    '585_WINTER': '冬天的樣子',\r\n\r\n    // 形態變化 - 萌芽鹿\r\n    // '586_NORMAL': '春天的樣子',\r\n    '586_SPRING': '春天的樣子',\r\n    '586_SUMMER': '夏天的樣子',\r\n    '586_AUTUMN': '秋天的樣子',\r\n    '586_WINTER': '冬天的樣子',\r\n\r\n    // 形態變化 - 龍捲雲\r\n    // '641_NORMAL': '化身形態',\r\n    '641_INCARNATE': '化身形態',\r\n    '641_THERIAN': '靈獸形態',\r\n\r\n    // 形態變化 - 雷電雲\r\n    // '642_NORMAL': '化身形態',\r\n    '642_INCARNATE': '化身形態',\r\n    '642_THERIAN': '靈獸形態',\r\n\r\n    // 形態變化 - 土地雲\r\n    // '645_NORMAL': '化身形態',\r\n    '645_INCARNATE': '化身形態',\r\n    '645_THERIAN': '靈獸形態',\r\n\r\n    // 形態變化 - 酋雷姆\r\n    '646_NORMAL': '酋雷姆的樣子',\r\n    '646_BLACK': '闇黑酋雷姆',\r\n    '646_WHITE': '焰白酋雷姆',\r\n\r\n    // 形態變化 - 凱路迪歐\r\n    // '647_NORMAL': '平常的樣子',\r\n    '647_ORDINARY': '平常的樣子',\r\n    '647_RESOLUTE': '覺悟的樣子',\r\n\r\n    // 形態變化 - 美洛耶塔\r\n    // '648_NORMAL': '歌聲形態',\r\n    '648_ARIA': '歌聲形態',\r\n    '648_PIROUETTE': '舞步形態',\r\n\r\n    // 形態變化 - 蓋諾賽克特\r\n    '649_NORMAL': '蓋諾賽克特的樣子',\r\n    '649_SHOCK': '閃電卡帶',\r\n    '649_BURN': '火焰卡帶',\r\n    '649_CHILL': '冰凍卡帶',\r\n    '649_DOUSE': '水流卡帶',\r\n\r\n    // 形態變化 - 彩粉蝶\r\n    // 形態變化 - 花蓓蓓\r\n    // 形態變化 - 花葉蒂\r\n    // 形態變化 - 花潔夫人\r\n    // 形態變化 - 多麗米亞\r\n    // 形態變化 - 堅盾劍怪\r\n    // 形態變化 - 南瓜精\r\n    // 形態變化 - 南瓜怪人\r\n    // 形態變化 - 基格爾德\r\n    // 形態變化 - 胡帕\r\n    // 形態變化 - 花舞鳥\r\n    // 形態變化 - 鬃岩狼人\r\n    // 形態變化 - 弱丁魚\r\n    // 形態變化 - 銀伴戰獸\r\n    // 形態變化 - 小隕星\r\n    // 形態變化 - 奈克洛茲瑪\r\n    // 形態變化 - 顫弦蠑螈\r\n    // 形態變化 - 冰砌鵝\r\n    // 形態變化 - 莫魯貝可\r\n    // 形態變化 - 蒼響\r\n    // '888_NORMAL': '平常的樣子',\r\n    '888_CROWNED_SWORD': '劍之王',\r\n    '888_HERO': '百戰勇者',\r\n\r\n    // 形態變化 - 藏瑪然特\r\n    // '889_NORMAL': '平常的樣子',\r\n    '889_CROWNED_SHIELD': '盾之王',\r\n    '889_HERO': '百戰勇者',\r\n\r\n    // 形態變化 - 無極汰那\r\n    // 形態變化 - 武道熊師\r\n    // 形態變化 - 蕾冠王\r\n\r\n    // 地區形態 - 阿羅拉\r\n    '19_ALOLA': '阿羅拉', // 小拉達\r\n    '20_ALOLA': '阿羅拉', // 拉達\r\n    '26_ALOLA': '阿羅拉', // 雷丘\r\n    '27_ALOLA': '阿羅拉', // 穿山鼠\r\n    '28_ALOLA': '阿羅拉', // 穿山王\r\n    '37_ALOLA': '阿羅拉', // 六尾\r\n    '38_ALOLA': '阿羅拉', // 九尾\r\n    '50_ALOLA': '阿羅拉', // 地鼠\r\n    '51_ALOLA': '阿羅拉', // 三地鼠\r\n    '52_ALOLA': '阿羅拉', // 喵喵\r\n    '53_ALOLA': '阿羅拉', // 貓老大\r\n    '74_ALOLA': '阿羅拉', // 小拳石\r\n    '75_ALOLA': '阿羅拉', // 隆隆石\r\n    '76_ALOLA': '阿羅拉', // 隆隆岩\r\n    '88_ALOLA': '阿羅拉', // 臭泥\r\n    '89_ALOLA': '阿羅拉', // 臭臭泥\r\n    '103_ALOLA': '阿羅拉', // 椰蛋樹\r\n    '105_ALOLA': '阿羅拉', // 嘎啦嘎啦\r\n\r\n    // 地區形態 - 伽勒爾\r\n    '52_GALARIAN': '伽勒爾', // 喵喵\r\n    '77_GALARIAN': '伽勒爾', // 小火馬\r\n    '78_GALARIAN': '伽勒爾', // 烈焰馬\r\n    '79_GALARIAN': '伽勒爾', // 呆呆獸\r\n    '80_GALARIAN': '伽勒爾', // 呆殼獸\r\n    '83_GALARIAN': '伽勒爾', // 大蔥鴨\r\n    '110_GALARIAN': '伽勒爾', // 雙彈瓦斯\r\n    '122_GALARIAN': '伽勒爾', // 魔牆人偶\r\n    '144_GALARIAN': '伽勒爾', // 急凍鳥\r\n    '145_GALARIAN': '伽勒爾', // 閃電鳥\r\n    '146_GALARIAN': '伽勒爾', // 火焰鳥\r\n    '199_GALARIAN': '伽勒爾', // 呆呆王\r\n    '222_GALARIAN': '伽勒爾', // 太陽珊瑚\r\n    '263_GALARIAN': '伽勒爾', // 蛇紋熊\r\n    '264_GALARIAN': '伽勒爾', // 直衝熊\r\n    '554_GALARIAN': '伽勒爾', // 火紅不倒翁\r\n    '555_GALARIAN_STANDARD': '伽勒爾', // 達摩狒狒\r\n    '555_GALARIAN_ZEN': '伽勒爾 達摩模式', // 達摩狒狒 達摩模式\r\n    '562_GALARIAN': '伽勒爾', // 哭哭面具\r\n    '618_GALARIAN': '伽勒爾', // 泥巴魚\r\n    '862_NORMAL': '伽勒爾', // 堵攔熊\r\n    '863_NORMAL': '伽勒爾', // 喵頭目\r\n    '865_NORMAL': '伽勒爾', // 蔥遊兵\r\n    '866_NORMAL': '伽勒爾', // 踏冰人偶\r\n    '867_NORMAL': '伽勒爾', // 死神板\r\n    \r\n    // 地區形態 - 洗翠\r\n    '58_HISUIAN': '洗翠', // 卡蒂狗\r\n    '59_HISUIAN': '洗翠', // 風速狗\r\n    '100_HISUIAN': '洗翠', // 霹靂電球\r\n    '101_HISUIAN': '洗翠', // 頑皮雷彈\r\n    '211_HISUIAN': '洗翠', // 千針魚\r\n    '215_HISUIAN': '洗翠', // 狃拉\r\n    '628_HISUIAN': '洗翠', // 勇士雄鷹\r\n\r\n    // 特殊外觀 - 皮卡丘\r\n    '25_VS_2019': '面罩摔角手皮卡丘', // 摔角皮卡丘\r\n    '25_COPY_2019': '複製皮卡丘', // 複製皮卡丘\r\n    '25_FALL_2019': '萬聖節皮卡丘', // 萬聖節皮卡丘\r\n    '25_COSTUME_2020': '飛翔皮卡丘', // 飛翔皮卡丘\r\n    '25_ADVENTURE_HAT_2020': '探險家皮卡丘', // 探險家皮卡丘\r\n    '25_WINTER_2020': '冬季皮卡丘', // 冬季皮卡丘\r\n    '25_KARIYUSHI': '沖繩皮卡丘', // 沖繩皮卡丘\r\n    '25_FLYING_5TH_ANNIV': '五週年飛翔皮卡丘', // 五週年飛翔皮卡丘\r\n    '25_ROCK_STAR': '硬搖滾皮卡丘', // 硬搖滾皮卡丘\r\n    '25_POP_STAR': '偶像皮卡丘', // 偶像皮卡丘\r\n\r\n    // 特殊外觀 - 電影超夢的逆襲\r\n    '3_COPY_2019': '複製妙蛙花', // 複製妙蛙花\r\n    '6_COPY_2019': '複製噴火龍', // 複製噴火龍\r\n    '9_COPY_2019': '複製水箭龜', // 複製水箭龜\r\n    '150_A': '裝甲超夢', // 裝甲超夢\r\n\r\n    // 特殊外觀 - 2019萬聖節\r\n    '1_FALL_2019': '2019 萬聖節', // 妙蛙種子\r\n    '4_FALL_2019': '2019 萬聖節', // 小火龍\r\n    '7_FALL_2019': '2019 萬聖節', // 傑尼龜\r\n\r\n    // 特殊外觀 - 2020萬聖節\r\n    '94_COSTUME_2020': '2020 萬聖節', // 耿鬼\r\n    '302_COSTUME_2020': '2020 萬聖節', // 勾魂眼\r\n\r\n    // 特殊外觀 - 2020聖誕節\r\n    '225_WINTER_2020': '2020 聖誕節', // 信使鳥\r\n    '613_WINTER_2020': '2020 聖誕節', // 噴嚏熊\r\n\r\n    // 特殊外觀 - 2020跨年\r\n    '79_2020': '2020 跨年', // 呆呆獸\r\n    '80_2020': '2020 跨年', // 呆殼獸\r\n};\r\n\r\nfunction translateForm(no: number, form?: string) {\r\n    const translatedForm = formTable[`${no}_${form}`];\r\n\r\n    if (translatedForm) {\r\n        return translatedForm;\r\n    }\r\n\r\n    switch (form) {\r\n        case 'NORMAL':\r\n            return '平常的樣子';\r\n        case 'SHADOW':\r\n            return '暗影';\r\n        case 'PURIFIED':\r\n            return '淨化';\r\n        case 'MEGA':\r\n            return '超級進化';\r\n        case 'MEGA_X':\r\n            return '超級進化 X';\r\n        case 'MEGA_Y':\r\n            return '超級進化 Y';\r\n        default:\r\n            return form;\r\n    }\r\n}\r\n\r\nexport {\r\n    translateForm,\r\n}\r\n","// Node modules.\r\nimport { omit } from 'lodash';\r\n// Local modules.\r\nimport type { IPokemon, IEvolution } from '../models/pokemon';\r\n\r\ntype EvolutionRequirement = Omit<IEvolution, 'uniqueId' | 'form'> | null;\r\n\r\nexport interface IEvolutionNode {\r\n    pokemon: IPokemon;\r\n    requirement: EvolutionRequirement;\r\n    branches: IEvolutionNode[] | null;\r\n}\r\n\r\nfunction getRootPokemon(familyPokemons: IPokemon[], target: IPokemon): IPokemon {\r\n    const previousPokemon = familyPokemons.find((p) => !!p.evolutions.find((e) =>\r\n        e.uniqueId === target.uniqueId && e.form === target.form\r\n    ));\r\n\r\n    if (previousPokemon) {\r\n        return getRootPokemon(familyPokemons, previousPokemon);\r\n    } else {\r\n        return target;\r\n    }\r\n}\r\n\r\nfunction getNextPokemon(familyPokemons: IPokemon[], evo: IEvolution): IPokemon {\r\n    return familyPokemons.find((p) =>\r\n        p.uniqueId === evo.uniqueId && p.form === evo.form\r\n    )!;\r\n}\r\n\r\nfunction getEvolutionNode(familyPokemons: IPokemon[], target: IPokemon, requirement: EvolutionRequirement): IEvolutionNode {\r\n    const nextPokemons = target?.evolutions?.length\r\n        ? target.evolutions.map((e) => {\r\n            const nextPokemon = getNextPokemon(familyPokemons, e);\r\n            const nextRequirement: EvolutionRequirement = omit(e, ['uniqueId', 'form']);\r\n            return getEvolutionNode(familyPokemons, nextPokemon, nextRequirement);\r\n        })\r\n        : null;\r\n\r\n    return {\r\n        pokemon: target,\r\n        requirement,\r\n        branches: nextPokemons,\r\n    };\r\n}\r\n\r\nfunction genEvolutionTree(allPokemons: IPokemon[], target?: IPokemon): IEvolutionNode | null {\r\n    if (target) {\r\n        const familyPokemons = allPokemons.filter((p) => p.familyId === target.familyId);\r\n        const rootPokemon = getRootPokemon(familyPokemons, target);\r\n        const root = getEvolutionNode(familyPokemons, rootPokemon, null);\r\n\r\n        return root;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport {\r\n    genEvolutionTree,\r\n};\r\n","// Node modules.\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {\r\n    PageHeader,\r\n    Row,\r\n    Col,\r\n    Tabs,\r\n    Select,\r\n    Button,\r\n} from 'antd';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport type { IPokemon, League } from '../models/pokemon';\r\nimport * as Pokemon from '../components/pokemon';\r\nimport { PokemonContext } from '../contexts/pokemon';\r\nimport { translateForm } from '../utils/translate-form';\r\nimport type { IEvolutionNode } from '../utils/generate-evolution-tree';\r\nimport { genEvolutionTree } from '../utils/generate-evolution-tree';\r\n\r\nconst ProfileTabs = styled(Tabs)`\r\n.ant-tabs-nav {\r\n    &::before {\r\n        border-bottom: none;\r\n    }\r\n\r\n    .ant-tabs-nav-list .ant-tabs-tab:not(.ant-tabs-tab-active) .ant-tabs-tab-btn {\r\n        color: #ECECEC;\r\n        text-shadow: #000000 0.1em 0.1em 0.2em;\r\n    }\r\n}\r\n.ant-tabs-content {\r\n    margin-top: -16px;\r\n}\r\n.ant-tabs-content > .ant-tabs-tabpane {\r\n    background: #fff;\r\n    border-radius: 2px;\r\n    padding: 16px;\r\n    z-index: 1;\r\n}\r\n.ant-tabs-tab {\r\n    background: transparent !important;\r\n    border-color: transparent !important;\r\n}\r\n.ant-tabs-tab-active {\r\n    background: #fff !important;\r\n    border-color: #fff !important;\r\n}\r\n`;\r\n\r\ninterface PokemonProfileScreenProps {\r\n    className?: string;\r\n    pokemons: IPokemon[];\r\n}\r\n\r\nconst PokemonProfileScreen: React.FC<PokemonProfileScreenProps> = (props) => {\r\n    const { className } = props;\r\n\r\n    const pokemons = useContext(PokemonContext);\r\n\r\n    const { pokemonNo, pokemonForm } = useParams<{ pokemonNo: string, pokemonForm: string }>();\r\n\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [isomorphicPokemons, setIsomorphicPokemons] = useState<IPokemon[]>([]);\r\n    const [displayPokemon, setDisplayPokemon] = useState<IPokemon | undefined>();\r\n    const [evolutionTree, setEvolutionTree] = useState<IEvolutionNode | null>(null);\r\n    const [shiny, setShiny] = useState(false);\r\n    const [league, setLeague] = useState<League>();\r\n\r\n    useEffect(() => {\r\n        const newIsomorphicPokemons = pokemons.filter((p) => p.no === parseInt(pokemonNo));\r\n        const newDisplayPokemon = newIsomorphicPokemons.find((p) => p.form?.toLowerCase() === pokemonForm);\r\n        const newEvolutionTree = genEvolutionTree(pokemons, newDisplayPokemon);\r\n        setIsomorphicPokemons(newIsomorphicPokemons);\r\n        setDisplayPokemon(newDisplayPokemon);\r\n        setEvolutionTree(newEvolutionTree);\r\n    }, [pokemons, pokemonNo, pokemonForm]);\r\n\r\n    useEffect(() => {\r\n        if (displayPokemon) {\r\n            if (displayPokemon.greatLeague) {\r\n                setLeague('greatLeague');\r\n            } else if (displayPokemon.ultraLeague) {\r\n                setLeague('ultraLeague');\r\n            } else if (displayPokemon.masterLeague) {\r\n                setLeague('masterLeague');\r\n            }\r\n        }\r\n    }, [displayPokemon]);\r\n\r\n    if (!displayPokemon) {\r\n        return null;\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to={'/pokemons'} />\r\n    }\r\n\r\n    return (\r\n        <PageHeader className={[className, displayPokemon?.types[0]].join(' ')}\r\n            title={displayPokemon.name}\r\n            subTitle={`#${displayPokemon.no}`}\r\n            onBack={() => setRedirect(true)}\r\n            extra={[\r\n                <Select key='1' className='pokemon-forms-select'\r\n                    value={pokemonForm}\r\n                >\r\n                    {isomorphicPokemons.map(({ form }, i) => (\r\n                        <Select.Option key={i}\r\n                            value={String(form).toLowerCase()}\r\n                        >\r\n                            <Link to={`/pokemons/${pokemonNo}/${String(form).toLowerCase()}`}>\r\n                                <div className='pokemon-forms-option'>\r\n                                    {translateForm(displayPokemon.no, form)}\r\n                                </div>\r\n                            </Link>\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>,\r\n                <Button key='2' shape='circle'\r\n                    type={shiny ? 'primary' : 'dashed'}\r\n                    onClick={() => setShiny(!shiny)}\r\n                >\r\n                    {'✨'}\r\n                </Button>,\r\n            ]}\r\n        >\r\n            {/* Avatar */}\r\n            <Row justify={'center'} align={'middle'}>\r\n                <Col className='pokemon-avatar' flex={0}>\r\n                    {/* Image */}\r\n                    <Pokemon.AddressedImage\r\n                        pokemonNo={displayPokemon.no}\r\n                        pokemonForm={displayPokemon.form}\r\n                        shiny={shiny}\r\n                        size={125}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <ProfileTabs type='card' centered>\r\n                <ProfileTabs.TabPane tab={'基本數據'} key='meta'>\r\n                    <Pokemon.Types\r\n                        pokemon={displayPokemon}\r\n                    />\r\n\r\n                    <Pokemon.About\r\n                        pokemon={displayPokemon}\r\n                    />\r\n\r\n                    <Pokemon.EvolutionTree\r\n                        evolutionTree={evolutionTree}\r\n                    />\r\n\r\n                    <Pokemon.Stats\r\n                        allPokemons={pokemons}\r\n                        pokemon={displayPokemon}\r\n                    />\r\n\r\n                    <Pokemon.CombatPower\r\n                        cpTable={displayPokemon.cpTable}\r\n                    />\r\n                </ProfileTabs.TabPane>\r\n\r\n                <ProfileTabs.TabPane tab={'道館與團體戰'} key='pve'>\r\n                    <Pokemon.MoveTable\r\n                        pokemon={displayPokemon}\r\n                        mode={'pve'}\r\n                        leagueRanking={league && displayPokemon[league]}\r\n                    />\r\n                </ProfileTabs.TabPane>\r\n\r\n                <ProfileTabs.TabPane tab={'訓練家對戰'} key='pvp'>\r\n                    <Pokemon.CombatRanking\r\n                        pokemon={displayPokemon}\r\n                        league={league}\r\n                        setLeague={setLeague}\r\n                    />\r\n\r\n                    <Pokemon.MoveTable\r\n                        pokemon={displayPokemon}\r\n                        mode={'pvp'}\r\n                        leagueRanking={league && displayPokemon[league]}\r\n                    />\r\n                </ProfileTabs.TabPane>\r\n            </ProfileTabs>\r\n        </PageHeader>\r\n    );\r\n};\r\n\r\nconst styledPokemonProfileScreen = styled(PokemonProfileScreen)`\r\n& {\r\n    @keyframes background-image-gradient {\r\n        from {\r\n            opacity: 0;\r\n        }\r\n    }\r\n\r\n    @keyframes background-gradient {\r\n        from {\r\n            background-color: #ECECEC;\r\n        }\r\n    }\r\n\r\n    &::before {\r\n        content: '';\r\n        background-repeat: no-repeat;\r\n        background-size: 100%;\r\n        position: absolute;\r\n        top: 0px;\r\n        right: 0px;\r\n        bottom: 0px;\r\n        left: 0px;\r\n        opacity: 1;\r\n        animation: background-image-gradient 5s 1;\r\n    }\r\n    \r\n    min-height: 100vh;\r\n    animation: background-gradient 1s 1;\r\n\r\n    &.POKEMON_TYPE_NORMAL {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/normal.png\");\r\n        }\r\n\r\n        background-color: #D5C398;\r\n    }\r\n\r\n    &.POKEMON_TYPE_FIRE {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/fire.png\");\r\n        }\r\n\r\n        background-color: #5C2A3D;\r\n    }\r\n\r\n    &.POKEMON_TYPE_WATER {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/water.png\");\r\n        }\r\n\r\n        background-color: #0085A1;\r\n    }\r\n\r\n    &.POKEMON_TYPE_GRASS {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/grass.png\");\r\n        }\r\n\r\n        background-color: #AED059;\r\n    }\r\n\r\n    &.POKEMON_TYPE_ELECTRIC {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/electric.png\");\r\n        }\r\n\r\n        background-color: #123A63;\r\n    }\r\n\r\n    &.POKEMON_TYPE_ICE {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/ice.png\");\r\n        }\r\n\r\n        background-color: #416987;\r\n    }\r\n\r\n    &.POKEMON_TYPE_FIGHTING {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/fighting.png\");\r\n        }\r\n\r\n        background-color: #836F52;\r\n    }\r\n\r\n    &.POKEMON_TYPE_POISON {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/poison.png\");\r\n        }\r\n\r\n        background-color: #04102D;\r\n    } \r\n\r\n    &.POKEMON_TYPE_GROUND {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/ground.png\");\r\n        }\r\n\r\n        background-color: #BE9973;\r\n    }\r\n\r\n    &.POKEMON_TYPE_FLYING {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/flying.png\");\r\n        }\r\n\r\n        background-color: #6CA1EB;\r\n    }\r\n\r\n    &.POKEMON_TYPE_PSYCHIC {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/psychic.png\");\r\n        }\r\n\r\n        background-color: #232CB5;\r\n    }\r\n\r\n    &.POKEMON_TYPE_BUG {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/bug.png\");\r\n        }\r\n\r\n        background-color: #C0A910;\r\n    }\r\n\r\n    &.POKEMON_TYPE_ROCK {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/rock.png\");\r\n        }\r\n\r\n        background-color: #76808E;\r\n    }\r\n\r\n    &.POKEMON_TYPE_GHOST {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/ghost.png\");\r\n        }\r\n\r\n        background-color: #191256;\r\n    }\r\n\r\n    &.POKEMON_TYPE_DARK {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/dark.png\");\r\n        }\r\n\r\n        background-color: #04102D;\r\n    }\r\n\r\n    &.POKEMON_TYPE_DRAGON {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/dragon.png\");\r\n        }\r\n\r\n        background-color: #436B40;\r\n    }\r\n\r\n    &.POKEMON_TYPE_STEEL {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/steel.png\");\r\n        }\r\n\r\n        background-color: #1C2936;\r\n    }\r\n\r\n    &.POKEMON_TYPE_FAIRY {\r\n        &::before {\r\n            background-image: url(\"/willow-pokedex/type-backgrounds/fairy.png\");\r\n        }\r\n\r\n        background-color: #8D70E0;\r\n    }\r\n    \r\n    &.ant-page-header {\r\n        padding: 16px 16px;\r\n    }\r\n}\r\n\r\n.pokemon-forms-select {\r\n    min-width: 100px;\r\n}\r\n\r\n.pokemon-forms-option {\r\n    width: 100%;\r\n}\r\n\r\n.pokemon-avatar {\r\n    text-align: center;\r\n    filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, 0.5));\r\n}\r\n\r\n.divider-title {\r\n    margin: 0;\r\n}\r\n\r\n/* Overwrite antd components */\r\n.ant-page-header-heading .ant-page-header-heading-left {\r\n    z-index: 1;\r\n\r\n    .ant-page-header-back .ant-page-header-back-button {\r\n        color: #ECECEC;\r\n        text-shadow: #000000 0.1em 0.1em 0.2em;\r\n    }\r\n\r\n    .ant-page-header-heading-title, .ant-page-header-heading-sub-title {\r\n        color: #ECECEC;\r\n        text-shadow: #000000 0.1em 0.1em 0.2em;\r\n        padding-right: .5em;\r\n        margin-right: 0;\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledPokemonProfileScreen;\r\n","// Node modules.\r\nimport { chain } from 'lodash';\r\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Space, Affix, Input, Row, Col, Typography, Divider, Spin } from 'antd';\r\nimport LazyLoad from 'react-lazyload';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport type { IGeneration } from '../models/generation';\r\nimport { PokemonContext } from '../contexts/pokemon';\r\nimport * as Pokemon from '../components/pokemon';\r\n\r\ninterface SearchScreenProps {\r\n    className?: string;\r\n}\r\n\r\nconst DEFAULT_SCROLL_THRESHOLD = '2000px';\r\n\r\nconst SearchScreen: React.FC<SearchScreenProps> = (props) => {\r\n    const { className } = props;\r\n\r\n    const pokemons = useContext(PokemonContext);\r\n\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [generations, setGenerations] = useState<IGeneration[]>([]);\r\n    const [displayGenerations, setDisplayGenerations] = useState<IGeneration[]>([]);\r\n\r\n    const onSearch = useCallback((value: string) => {\r\n        if (!value) {\r\n            setHasMore(true);\r\n            setDisplayGenerations(generations.slice(0, 1));\r\n            return;\r\n        }\r\n\r\n        setHasMore(false);\r\n\r\n        const displayGenerations = generations.map((generation) => ({\r\n            ...generation,\r\n            pokemons: generation.pokemons.filter((pokemon) =>\r\n                pokemon.name?.includes(value) || pokemon.uniqueId?.includes(value.toUpperCase())\r\n            ),\r\n        }));\r\n        setDisplayGenerations(displayGenerations);\r\n    }, [generations]);\r\n\r\n    const fetchMoreData = useCallback(() => {\r\n        if (!hasMore || displayGenerations.length >= generations.length) {\r\n            setHasMore(false);\r\n            return;\r\n        }\r\n\r\n        const [startIdx, endIdx] = [\r\n            displayGenerations.length,\r\n            displayGenerations.length + 1,\r\n        ];\r\n        const nextGeneration = generations.slice(startIdx, endIdx);\r\n        setDisplayGenerations(displayGenerations.concat(nextGeneration));\r\n    }, [generations, displayGenerations, hasMore]);\r\n\r\n    useEffect(() => {\r\n        const generationRules = [\r\n            { generationNo: 1, displayGeneration: '關都地區', noRange: [1, 151], extraForms: [] },\r\n            { generationNo: 2, displayGeneration: '城都地區', noRange: [152, 251], extraForms: [] },\r\n            { generationNo: 3, displayGeneration: '豐緣地區', noRange: [252, 386], extraForms: [] },\r\n            { generationNo: 4, displayGeneration: '神奧地區', noRange: [387, 493], extraForms: [] },\r\n            { generationNo: 5, displayGeneration: '合眾地區', noRange: [494, 649], extraForms: [] },\r\n            { generationNo: 6, displayGeneration: '卡洛斯地區', noRange: [650, 721], extraForms: [] },\r\n            { generationNo: 7, displayGeneration: '阿羅拉地區', noRange: [722, 809], extraForms: ['ALOLA'] },\r\n            { generationNo: 8, displayGeneration: '伽勒爾地區', noRange: [810, 898], extraForms: ['GALARIAN'] },\r\n            { generationNo: 4, displayGeneration: '洗翠地區', noRange: [899, 905], extraForms: ['HISUIAN'] },\r\n            { generationNo: 9, displayGeneration: '帕底亞地區', noRange: [906, Infinity], extraForms: ['PALDEAN'] },\r\n        ];\r\n\r\n        // Group by no and get the first one.\r\n        const generations = generationRules.map((generationRule) => ({\r\n            no: generationRule.generationNo,\r\n            displayName: generationRule.displayGeneration,\r\n            pokemons: chain(pokemons)\r\n                .filter(({ no, form }) => {\r\n                    const noInRange = generationRule.noRange[0] <= no && no <= generationRule.noRange[1];\r\n                    const sameForm = generationRule.extraForms.includes(String(form));\r\n                    return noInRange || sameForm;\r\n                })\r\n                .groupBy(({ no }) => no)\r\n                .map(([first]) => first)\r\n                .value()\r\n        }));\r\n\r\n        setGenerations(generations);\r\n        setDisplayGenerations(generations.slice(0, 1));\r\n    }, [pokemons]);\r\n\r\n    return (\r\n        <Space className={className} direction='vertical'>\r\n            <Affix>\r\n                <div className='search-box'>\r\n                    <Input.Search\r\n                        placeholder='搜尋寶可夢'\r\n                        onChange={(e) => onSearch(e.target.value)}\r\n                    />\r\n                </div>\r\n            </Affix>\r\n\r\n            <InfiniteScroll\r\n                dataLength={displayGenerations.length}\r\n                next={fetchMoreData}\r\n                hasMore={hasMore}\r\n                loader={<Spin className='loading' />}\r\n                scrollThreshold={DEFAULT_SCROLL_THRESHOLD}\r\n            >\r\n                {/* Blocks by generations */}\r\n                {displayGenerations.map((generation) => (generation.pokemons.length === 0\r\n                    ? null\r\n                    : (\r\n                        <div className='generation-block'>\r\n                            <Divider className='generation-title'>\r\n                                {generation.displayName}\r\n                            </Divider>\r\n\r\n                            {/* Blocks by pokemons */}\r\n                            <Row key={generation.displayName} className='pokemons' justify='start' gutter={[8, 8]}>\r\n                                {generation.pokemons.map((pokemon) =>\r\n                                    <Col key={pokemon.no}\r\n                                        id={`${generation.displayName}-${pokemon.name}`}\r\n                                        className={'pokemon-item'}\r\n                                        flex='33%'\r\n                                    >\r\n                                        <Link to={`/pokemons/${pokemon.no}/${pokemon.form?.toLowerCase()}`}>\r\n                                            <div className={['pokemon-container', pokemon.types[0]].join(' ')}>\r\n                                                {/* Image */}\r\n                                                <LazyLoad height={100} offset={1000}>\r\n                                                    <Pokemon.AddressedImage\r\n                                                        pokemonNo={pokemon.no}\r\n                                                        pokemonForm={pokemon.form}\r\n                                                        size={100}\r\n                                                    />\r\n                                                </LazyLoad>\r\n\r\n                                                <Row className='pokemon-info'>\r\n                                                    {/* No. */}\r\n                                                    <Col flex='20px'>\r\n                                                        <Typography.Text className='pokemon-no'>\r\n                                                            {pokemon.no.toString().padStart(3, '0')}\r\n                                                        </Typography.Text>\r\n                                                    </Col>\r\n\r\n                                                    {/* Name */}\r\n                                                    <Col flex='auto'>\r\n                                                        <Typography.Text className='pokemon-name'>\r\n                                                            {pokemon.name}\r\n                                                        </Typography.Text>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </Col>\r\n                                )}\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n                ))}\r\n            </InfiniteScroll>\r\n        </Space>\r\n    );\r\n};\r\n\r\nconst styledSearchScreen = styled(SearchScreen)`\r\n& {\r\n    width: 100%;\r\n\r\n    /* Fix the infinite-scroll layout issue */\r\n    .infinite-scroll-component > .ant-row {\r\n        margin-left: 0;\r\n        margin-right: 0;\r\n    }\r\n}\r\n\r\n.search-box {\r\n    padding: 12px 12px 0 12px;\r\n}\r\n\r\n.loading {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 1.5em 0;\r\n}\r\n\r\n.generation-title {\r\n    color: rgba(0, 0, 0, 0.65);\r\n    font-size: 1.25em;\r\n    letter-spacing: .25em;\r\n    padding: 0;\r\n    margin: .5em 0 .5em 0;\r\n}\r\n\r\n.pokemons {\r\n    padding: 0 12px 36px 12px;\r\n    \r\n    .pokemon-item {\r\n        text-align: center;\r\n\r\n        .pokemon-container {\r\n            background: #FFF;\r\n            border-radius: 5px;\r\n\r\n            &.POKEMON_TYPE_NORMAL {\r\n                background-color: #D5C398;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/normal.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_FIRE {\r\n                background-color: #5C2A3D;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/fire.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_WATER {\r\n                background-color: #0085A1;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/water.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_GRASS {\r\n                background-color: #AED059;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/grass.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_ELECTRIC {\r\n                background-color: #123A63;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/electric.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_ICE {\r\n                background-color: #416987;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/ice.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_FIGHTING {\r\n                background-color: #836F52;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/fighting.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_POISON {\r\n                background-color: #04102D;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/poison.png\");\r\n                background-size: 100% 100%;\r\n            } \r\n\r\n            &.POKEMON_TYPE_GROUND {\r\n                background-color: #BE9973;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/ground.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_FLYING {\r\n                background-color: #6CA1EB;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/flying.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_PSYCHIC {\r\n                background-color: #232CB5;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/psychic.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_BUG {\r\n                background-color: #C0A910;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/bug.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_ROCK {\r\n                background-color: #76808E;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/rock.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_GHOST {\r\n                background-color: #191256;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/ghost.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_DARK {\r\n                background-color: #04102D;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/dark.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_DRAGON {\r\n                background-color: #436B40;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/dragon.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_STEEL {\r\n                background-color: #1C2936;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/steel.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            &.POKEMON_TYPE_FAIRY {\r\n                background-color: #8D70E0;\r\n                background-image: url(\"/willow-pokedex/type-backgrounds/fairy.png\");\r\n                background-size: 100% 100%;\r\n            }\r\n\r\n            .pokemon-info {\r\n                background-color: rgba(0, 0, 0, .5);\r\n                border-bottom-left-radius: 5px;\r\n                border-bottom-right-radius: 5px;\r\n                \r\n                .pokemon-no {\r\n                    color: rgba(255, 255, 255, .65);\r\n                    font-size: 0.65em;\r\n                    padding-left: .5em;\r\n                }\r\n\r\n                .pokemon-name {\r\n                    color: rgba(255, 255, 255, .85);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledSearchScreen;\r\n","// Ref: https://github.com/react-ga/react-ga/wiki/React-Router-v4-withTracker\r\n\r\n// Node modules.\r\nimport React, { useEffect } from 'react';\r\nimport ReactGA, { FieldsObject } from 'react-ga';\r\n// Local modules.\r\nimport { gaTrackingId } from '../configs/index';\r\n\r\nReactGA.initialize(gaTrackingId);\r\n\r\nconst withTracker = (\r\n    WrappedComponent: React.ComponentType<any>,\r\n    options: FieldsObject = {},\r\n) => {\r\n    const trackPage = (page: string) => {\r\n        ReactGA.set({ page, ...options });\r\n        ReactGA.pageview(page);\r\n    };\r\n\r\n    return (props: any) => {\r\n        useEffect(() => {\r\n            trackPage(props.location.pathname);\r\n        }, [props.location.pathname]);\r\n\r\n        return <WrappedComponent {...props} />;\r\n    };\r\n}\r\n\r\nexport {\r\n    withTracker,\r\n};\r\n","export const gaTrackingId = 'UA-203073500-1';\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgLoading(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.985 511.985\",\n    style: {\n      enableBackground: \"new 0 0 511.985 511.985\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#ED5564\"\n    },\n    d: \"M491.859,156.348c-12.891-30.483-31.342-57.865-54.842-81.372 c-23.516-23.5-50.904-41.96-81.373-54.85c-31.56-13.351-65.091-20.125-99.652-20.125c-34.554,0-68.083,6.773-99.645,20.125 c-30.483,12.89-57.865,31.351-81.373,54.85c-23.499,23.507-41.959,50.889-54.85,81.372C6.774,187.91,0,221.44,0,255.993 c0,34.56,6.773,68.091,20.125,99.652c12.89,30.469,31.351,57.857,54.85,81.357c23.507,23.516,50.889,41.967,81.373,54.857 c31.562,13.344,65.091,20.125,99.645,20.125c34.561,0,68.092-6.781,99.652-20.125c30.469-12.891,57.857-31.342,81.373-54.857 c23.5-23.5,41.951-50.889,54.842-81.357c13.344-31.561,20.125-65.092,20.125-99.652C511.984,221.44,505.203,187.91,491.859,156.348z \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#E6E9ED\"\n    },\n    d: \"M0.102,263.18c0.875,32.014,7.593,63.092,20.023,92.465c12.89,30.469,31.351,57.857,54.85,81.357 c23.507,23.516,50.889,41.967,81.373,54.857c31.562,13.344,65.091,20.125,99.645,20.125c34.561,0,68.092-6.781,99.652-20.125 c30.469-12.891,57.857-31.342,81.373-54.857c23.5-23.5,41.951-50.889,54.842-81.357c12.438-29.373,19.156-60.451,20.031-92.465 H0.102z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#434A54\"\n    },\n    d: \"M510.765,281.211c0.812-8.344,1.219-16.75,1.219-25.218c0-9.516-0.516-18.953-1.531-28.289 c-12.719,1.961-30.984,4.516-53.998,7.054c-43.688,4.82-113.904,10.57-200.463,10.57c-86.552,0-156.776-5.75-200.455-10.57 c-23.022-2.539-41.28-5.093-53.998-7.054C0.516,237.04,0,246.478,0,255.993c0,8.468,0.406,16.875,1.219,25.218 c41.53,6.25,133.027,17.436,254.773,17.436S469.234,287.461,510.765,281.211z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#E6E9ED\"\n    },\n    d: \"M309.334,266.656c0,29.459-23.891,53.334-53.342,53.334c-29.452,0-53.334-23.875-53.334-53.334 c0-29.453,23.882-53.327,53.334-53.327C285.443,213.33,309.334,237.204,309.334,266.656z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#434A54\"\n    },\n    d: \"M255.992,170.66c-52.936,0-95.997,43.069-95.997,95.997s43.062,95.988,95.997,95.988 s95.996-43.061,95.996-95.988C351.988,213.729,308.928,170.66,255.992,170.66z M255.992,309.335 c-23.522,0-42.663-19.156-42.663-42.678c0-23.523,19.14-42.663,42.663-42.663c23.531,0,42.654,19.14,42.654,42.663 C298.646,290.178,279.523,309.335,255.992,309.335z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      opacity: 0.2,\n      fill: \"#FFFFFF\",\n      enableBackground: \"new\"\n    },\n    d: \"M491.859,156.348c-12.891-30.483-31.342-57.865-54.842-81.372 c-23.516-23.5-50.904-41.96-81.373-54.85c-31.56-13.351-65.091-20.125-99.652-20.125c-3.57,0-7.125,0.078-10.664,0.219 c30.789,1.25,60.662,7.93,88.974,19.906c30.498,12.89,57.873,31.351,81.371,54.85c23.5,23.507,41.969,50.889,54.857,81.372 c13.359,31.562,20.109,65.092,20.109,99.646c0,34.56-6.75,68.091-20.109,99.652c-12.889,30.469-31.357,57.857-54.857,81.357 c-23.498,23.516-50.873,41.967-81.371,54.857c-28.312,11.969-58.186,18.656-88.974,19.906c3.539,0.141,7.093,0.219,10.664,0.219 c34.561,0,68.092-6.781,99.652-20.125c30.469-12.891,57.857-31.342,81.373-54.857c23.5-23.5,41.951-50.889,54.842-81.357 c13.344-31.561,20.125-65.092,20.125-99.652C511.984,221.44,505.203,187.91,491.859,156.348z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      opacity: 0.1,\n      enableBackground: \"new\"\n    },\n    d: \"M20.125,355.645c12.89,30.469,31.351,57.857,54.85,81.357 c23.507,23.516,50.889,41.967,81.373,54.857c31.562,13.344,65.091,20.125,99.645,20.125c3.57,0,7.125-0.078,10.664-0.219 c-30.789-1.25-60.67-7.938-88.982-19.906c-30.483-12.891-57.857-31.342-81.364-54.857c-23.507-23.5-41.96-50.889-54.858-81.357 c-13.352-31.56-20.117-65.091-20.117-99.652c0-34.554,6.765-68.084,20.116-99.646C54.35,125.864,72.803,98.481,96.31,74.983 c23.507-23.507,50.881-41.968,81.364-54.858c28.312-11.976,58.193-18.656,88.982-19.906c-3.539-0.14-7.094-0.218-10.664-0.218 c-34.554,0-68.083,6.773-99.645,20.125c-30.483,12.89-57.865,31.351-81.373,54.858c-23.499,23.499-41.959,50.881-54.85,81.364 C6.774,187.91,0,221.44,0,255.993C0,290.553,6.774,324.085,20.125,355.645z\"\n  }), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoading);\nexport default __webpack_public_path__ + \"static/media/loading.e57f7ae6.svg\";\nexport { ForwardRef as ReactComponent };","// Node modules.\r\nimport React from 'react';\r\nimport { Spin } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n// Local modules.\r\nimport { ReactComponent as LoadingSvg } from '../../icons/loading.svg';\r\n\r\ninterface FullLoadingProps {\r\n    className?: string;\r\n}\r\n\r\nconst FullLoading: React.FC<FullLoadingProps> = (props) => {\r\n    const { className } = props;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <Spin\r\n                indicator={\r\n                    <Icon className='icon' spin\r\n                        component={LoadingSvg}\r\n                    />\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styledFullLoading = styled(FullLoading)`\r\n@keyframes fadeOut {\r\n    from {\r\n        font-size: 0em;\r\n        opacity: 1;\r\n    }\r\n\r\n    to {\r\n        font-size: 50em;\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n& {\r\n    display: flex;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .icon {\r\n        animation-duration: 1.2s;\r\n        animation-name: fadeOut;\r\n        animation-iteration-count: infinite;\r\n        animation-direction: alternate;\r\n    }\r\n}\r\n`;\r\n\r\nexport default styledFullLoading;\r\n","// Node modules.\nimport React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\n// Local modules.\nimport * as Screen from './screens/';\nimport { withTracker } from './hoc/ga';\nimport { usePokemonData } from './hooks/';\nimport { PokemonContext } from './contexts/pokemon';\nimport { FullLoading } from './components/misc';\n\nconst App: React.FC = () => {\n    const [loading, pokemons] = usePokemonData();\n\n    if (loading) {\n        return (\n            <FullLoading />\n        );\n    }\n\n    return (\n        <PokemonContext.Provider value={pokemons}>\n            <HashRouter>\n                <Switch>\n                    <Route path='/pokemons/:pokemonNo/:pokemonForm'\n                        component={withTracker(Screen.PokemonProfileScreen)}\n                    />\n\n                    <Route path='/pokemons'\n                        component={withTracker(Screen.SearchScreen)}\n                    />\n\n                    <Route>\n                        <Redirect to='/pokemons' />\n                    </Route>\n                </Switch>\n            </HashRouter>\n\n            {/* TODO: This is temporary */}\n            <div style={{ position: 'fixed', width: '100%', bottom: 0, zIndex: 100 }}>\n                <a href={'https://line.me/R/oaMessage/@611mscwy/?給博士，'}>\n                    <Button type='primary' block size='small'>\n                        {'圖鑑尚在測試，歡迎留訊息給博士'}\n                        <SendOutlined />\n                    </Button>\n                </a>\n            </div>\n        </PokemonContext.Provider>\n    );\n};\n\nexport default App;\n","// Node modules.\r\nimport { useEffect, useState } from 'react';\r\n// Local modules.\r\nimport type { IPokemon } from '../models/pokemon';\r\n\r\nconst usePokemonData = (): [boolean, IPokemon[]] => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [pokemons, setPokemons] = useState<IPokemon[]>([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setLoading(true);\r\n            const [res] = await Promise.all([\r\n                fetch('/willow-pokedex/data/pokemons.min.json'),\r\n                new Promise((resolve) => setTimeout(resolve, 1000)),\r\n            ]);\r\n            const allPokemons: IPokemon[] = await res.json();\r\n            setLoading(false);\r\n            setPokemons(allPokemons);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return [loading, pokemons];\r\n};\r\n\r\nexport {\r\n    usePokemonData,\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Styles.\nimport 'antd/dist/antd.css';\n// Node modules.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Local modules.\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}